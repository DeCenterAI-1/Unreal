{"version":3,"file":"63488.js","mappings":"ufAiBO,sBACP,eACA,yBACA,WACK,EACL,MAAW,QAAW,GACtB","sources":["webpack://unreal/./node_modules/.pnpm/thirdweb@5.93.5_@aws-sdk+client-lambda@3.777.0_@types+react-dom@19.0.4_@types+react@19.0.12___ouklnsjwvogyqsuwnvucv7k7o4/node_modules/thirdweb/dist/esm/rpc/actions/eth_estimateGas.js"],"sourcesContent":["import { hexToBigInt } from \"../../utils/encoding/hex.js\";\n/**\n * Estimates the gas required to execute a transaction on the Ethereum network.\n * @param request - The EIP1193 request function.\n * @param transactionRequest - The transaction request object.\n * @returns A promise that resolves to the estimated gas as a bigint.\n * @rpc\n * @example\n * ```ts\n * import { getRpcClient, eth_estimateGas } from \"thirdweb/rpc\";\n * const rpcRequest = getRpcClient({ client, chain });\n * const gas = await eth_estimateGas(rpcRequest, {\n *  to: \"0x...\",\n *  ...\n * });\n * ```\n */\nexport async function eth_estimateGas(request, transactionRequest) {\n    const estimateResult = await request({\n        method: \"eth_estimateGas\",\n        params: [transactionRequest],\n    });\n    return hexToBigInt(estimateResult);\n}\n//# sourceMappingURL=eth_estimateGas.js.map"],"names":[],"sourceRoot":""}