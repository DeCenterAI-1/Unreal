try{let e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:{},a=(new e.Error).stack;a&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[a]="51476e92-f4f6-4f3a-8117-608c2430433e",e._sentryDebugIdIdentifier="sentry-dbid-51476e92-f4f6-4f3a-8117-608c2430433e")}catch(e){}"use strict";exports.id=97379,exports.ids=[97379],exports.modules={97379:(e,a,t)=>{t.d(a,{relayOpenZeppelinTransaction:()=>c});var r=t(98598),n=t(99569),s=t(10907),i=t(3373);async function d({account:e,serializableTransaction:a,transaction:t,gasless:n}){let s=(0,r.P)({address:n.relayerForwarderAddress,chain:t.chain,client:t.client}),d=await (0,i.readContract)({contract:s,method:"function getNonce(address) view returns (uint256)",params:[e.address]}),[c,p]=await (async()=>{if(!a.to)throw Error("OpenZeppelin transactions must have a 'to' address");if(!a.gas)throw Error("OpenZeppelin transactions must have a 'gas' value");if(!a.data)throw Error("OpenZeppelin transactions must have a 'data' value");if(n.experimentalChainlessSupport){let r={from:e.address,to:a.to,value:0n,gas:a.gas,nonce:d,data:a.data,chainid:BigInt(t.chain.id)};return[await e.signTypedData({domain:{name:"GSNv2 Forwarder",version:"0.0.1",verifyingContract:s.address},message:r,primaryType:"ForwardRequest",types:{ForwardRequest:l}}),r]}let r={from:e.address,to:a.to,value:0n,gas:a.gas,nonce:d,data:a.data};return[await e.signTypedData({domain:{name:n.domainName??"GSNv2 Forwarder",version:n.domainVersion??"0.0.1",chainId:t.chain.id,verifyingContract:s.address},message:r,primaryType:"ForwardRequest",types:{ForwardRequest:o}}),r]})();return{message:p,signature:c,messageType:"forward"}}let o=[{name:"from",type:"address"},{name:"to",type:"address"},{name:"value",type:"uint256"},{name:"gas",type:"uint256"},{name:"nonce",type:"uint256"},{name:"data",type:"bytes"}],l=[{name:"from",type:"address"},{name:"to",type:"address"},{name:"value",type:"uint256"},{name:"gas",type:"uint256"},{name:"nonce",type:"uint256"},{name:"data",type:"bytes"},{name:"chainid",type:"uint256"}];async function c(e){let{message:a,messageType:t,signature:r}=await d(e),i=await fetch(e.gasless.relayerUrl,{method:"POST",body:(0,s.A)({request:a,type:t,signature:r,forwarderAddress:e.gasless.relayerForwarderAddress})});if(!i.ok)throw i.body?.cancel(),Error(`Failed to send transaction: ${await i.text()}`);let o=await i.json();if(!o.result)throw Error(`Relay transaction failed: ${o.message}`);let l=JSON.parse(o.result).txHash;if((0,n.q)(l))return{transactionHash:l,chain:e.transaction.chain,client:e.transaction.client};throw Error(`Failed to send transaction: ${(0,s.A)(o)}`)}}};
//# sourceMappingURL=97379.js.map