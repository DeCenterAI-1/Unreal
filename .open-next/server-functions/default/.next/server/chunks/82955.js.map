{"version":3,"file":"82955.js","mappings":"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","sources":["webpack://unreal/./src/app/home/components/imageViewInteractions.tsx","webpack://unreal/./src/app/home/components/comments/commentTextbox.tsx","webpack://unreal/./src/app/home/components/comments/Reply.tsx","webpack://unreal/./src/app/home/components/comments/comment.tsx","webpack://unreal/./src/app/home/components/followingBtn.tsx","webpack://unreal/./src/app/home/components/comments/commentArea.tsx","webpack://unreal/./src/app/home/components/imageView.tsx","webpack://unreal/./src/queries/user/doesUserFollows.ts","webpack://unreal/./src/hooks/useDoesUserFollow.tsx","webpack://unreal/./src/queries/user/toggleFollow.ts","webpack://unreal/./src/hooks/useToggleFollow.tsx","webpack://unreal/./src/app/home/components/generateInput.tsx"],"sourcesContent":["\"use client\";\nimport { supabase } from \"$/supabase/client\";\nimport { downloadImage, formatNumber } from \"@/utils\";\nimport {\n  DownloadIcon,\n  HeartFillIcon,\n  HeartIcon,\n  MessageIcon,\n  ShareIcon,\n} from \"@/app/components/icons\";\nimport { useLikePost } from \"@/hooks/useLikePost\";\nimport { usePost } from \"@/hooks/usePost\";\nimport { usePostLikes } from \"@/hooks/usePostLikes\";\nimport { useUser } from \"@/hooks/useUser\";\nimport React, { useState } from \"react\";\nimport { getImage } from \"../formattedPhotos\";\nimport { Post, UploadResponse } from \"$/types/data.types\";\nimport ShareModal from \"./modals/shareModal\";\nimport { useCountShareNotifications } from \"@/hooks/useNotifications\";\n\ninterface IInteractions {\n  commentCount: number;\n  postId: string;\n}\nexport default function ImageViewInteractions({\n  commentCount,\n  postId,\n}: IInteractions) {\n  const { data: likes } = usePostLikes(Number(postId), supabase);\n  const { userId } = useUser();\n  const { data: post } = usePost(Number(postId));\n\n  const [openShare, setOpenShare] = useState(false);\n  const { mutate: toggleLike } = useLikePost(\n    Number(postId),\n    userId,\n    post?.author as string,\n  );\n  const { shareCount: shareNotifications } = useCountShareNotifications(\n    Number(postId),\n  );\n  const userHasLiked = likes?.some((like) => like.author === userId);\n\n  return (\n    <div className=\"flex justify-between w-full relative h-8\">\n      <button\n        onClick={() => toggleLike()}\n        className=\"flex items-center gap-[2px] justify-center\"\n      >\n        {userHasLiked ? (\n          <HeartFillIcon color=\"#FFFFFF\" />\n        ) : (\n          <HeartIcon color=\"#FFFFFF\" />\n        )}\n        <p className=\"text-xs text-primary-3\">\n          {formatNumber(likes?.length as number)}\n        </p>\n      </button>\n\n      <button className=\"flex items-center gap-[2px] justify-center\">\n        <MessageIcon color=\"#F0F0F0\" />\n        <p className=\"text-xs text-primary-3\">{formatNumber(commentCount)}</p>\n      </button>\n\n      <button\n        onClick={() => setOpenShare(true)}\n        className=\"flex items-center gap-[2px] justify-center\"\n      >\n        <ShareIcon color=\"#F0F0F0\" />\n        <p className=\"text-xs text-primary-3\">{shareNotifications}</p>\n      </button>\n\n      {post && userId && openShare && (\n        <div className=\"fixed z-50 top-0 left-0 h-screen w-full\">\n          {\" \"}\n          <ShareModal\n            open={openShare}\n            post={post as Post}\n            userId={userId as string}\n            setOpen={setOpenShare}\n            link={\"https://unreal.art/home/photo/\" + postId}\n          />\n        </div>\n      )}\n\n      <button\n        onClick={() =>\n          downloadImage(\n            getImage(\n              (post?.ipfsImages as UploadResponse[])?.[0]?.hash,\n              (post?.ipfsImages as UploadResponse[])?.[0]?.fileNames[0],\n              post?.author as string,\n            ),\n            (post?.ipfsImages as UploadResponse[])?.[0]?.fileNames[0],\n          )\n        }\n      >\n        <DownloadIcon color=\"#F0F0F0\" />\n      </button>\n    </div>\n  );\n}\n","\"use client\";\nimport { CommentWithUser } from \"$/types/data.types\";\nimport { CloseIcon, EmojiIcon } from \"@/app/components/icons\";\nimport { usePostComment } from \"@/hooks/useComments\";\nimport { useUser } from \"@/hooks/useUser\";\nimport OptimizedImage from \"@/app/components/OptimizedImage\";\nimport { useState } from \"react\";\n\ninterface CommentTextboxProps {\n  postId: string;\n  replyTo: CommentWithUser | null;\n  closeReply(): void;\n  authorId: string;\n}\n\nexport default function CommentTextbox({\n  replyTo,\n  postId,\n  closeReply,\n  authorId,\n}: CommentTextboxProps) {\n  const postComment = usePostComment();\n\n  const [content, setContent] = useState<string | null>(null);\n  const { userId } = useUser();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!content || !content.trim() || !userId) return;\n    postComment.mutate({\n      post_id: postId,\n      content,\n      parent_id: replyTo?.id,\n      author: authorId,\n      senderId: userId,\n    });\n\n    if (replyTo) closeReply();\n    setContent(\"\");\n  };\n\n  return (\n    <div className=\"p-1\">\n      {replyTo && (\n        <div className=\"h-16 rounded-t-lg w-full bg-primary-12 py-2 px-3 border-2 border-primary-10\">\n          <div className=\"flex justify-between w-full\">\n            <p className=\"font-bold text-primary-2 text-[10px]\">REPLY TO</p>\n            <button onClick={closeReply} className=\"w-3 h-3\">\n              <CloseIcon color=\"#F5F5F5\" width={\"10px\"} height={\"10px\"} />\n            </button>\n          </div>\n\n          <div className=\"flex gap-2 items-center\">\n            <div>\n              <OptimizedImage\n                src={replyTo.avatar_url || \"/profile.jpg\"}\n                width={32}\n                height={32}\n                alt={`${replyTo.username || \"User\"}'s profile picture`}\n                className=\"rounded-full\"\n                trackPerformance={true}\n                imageName={`reply-to-avatar-${replyTo.user_id}`}\n              />\n            </div>\n\n            <div className=\"flex gap-3 mt-1\">\n              <p className=\"text-primary-4 text-xs font-medium\">\n                {replyTo.username}\n              </p>\n              <p className=\"text-xs text-primary-6 line-clamp-1\">\n                {replyTo.content}\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <form\n        onSubmit={handleSubmit}\n        className={`flex h-16 bg-primary-10 px-2 ${\n          replyTo ? \"rounded-b-lg\" : \"m-1 mt-2 rounded-lg\"\n        }  pl-4`}\n      >\n        <button className=\"w-8\">\n          <EmojiIcon color=\"#C1C1C1\" />\n        </button>\n\n        <textarea\n          onChange={(e) => setContent(e.target.value)}\n          value={content || \"\"}\n          className=\"flex-grow bg-primary-10 outline-none resize-none mt-[18px] text-primary-4\"\n        ></textarea>\n\n        <button\n          disabled={!content}\n          type=\"submit\"\n          className=\"text-primary-4 disable:text-primary-8 text-sm w-12\"\n        >\n          Post\n        </button>\n      </form>\n    </div>\n  );\n}\n","\"use client\";\nimport { HeartFillIcon, HeartIcon } from \"@/app/components/icons\";\nimport { CommentWithUser } from \"$/types/data.types\";\nimport { timeAgo } from \"@/app/libs/timeAgo\";\nimport useAuthorUsername from \"@/hooks/useAuthorUserName\";\nimport OptimizedImage from \"@/app/components/OptimizedImage\";\nimport {\n  useLikeComment,\n  useLikeReply,\n  useRealtimeReplies,\n  useReplies,\n  useUnlikeComment,\n  useUnlikeReply,\n} from \"@/hooks/useComments\";\n\nexport default function Reply({\n  data,\n}: // setReplyTo,\n// setCommentToReply,\n{\n  data: CommentWithUser;\n  // setReplyTo: (data: CommentWithUser | null) => void;\n  // setCommentToReply: (data: CommentWithUser) => void;\n}) {\n  const { data: user } = useAuthorUsername(data.user_id);\n  const likeReply = useLikeReply(\n    data.post_id.toString(),\n    data.parent_id as string\n  );\n  const unlikeReply = useUnlikeReply(\n    data.post_id.toString(),\n    data.parent_id as string\n  );\n\n  return (\n    <div className=\"pl-10 \">\n      <div className=\" gap-2 py-2  border-primary-10\">\n        <div className=\"flex w-full  gap-2\">\n          <div className=\"h-12 w-12\">\n            <OptimizedImage\n              src={data.avatar_url || \"/profile.jpg\"}\n              width={48}\n              height={48}\n              alt={`${user || \"User\"}'s profile picture`}\n              className=\"rounded-full\"\n              trackPerformance={true}\n              imageName={`reply-avatar-${data.user_id}`}\n            />\n          </div>\n          <div className=\"w-full\">\n            <div className=\"flex flex-col basis-1/6\">\n              <p className=\"text-primary-4 text-md font-medium whitespace-nowrap\">\n                {user}\n              </p>\n              <p className=\"text-xs\">{timeAgo(data.created_at)}</p>\n            </div>\n\n            <div className=\"flex gap-2 w-full pt-2\">\n              <div className=\"flex-grow space-y-4 gap-4\">\n                <p className=\"text-primary-6 text-sm flex-grow\">\n                  {data.content}\n                </p>\n              </div>\n              <div className=\"justify-end\">\n                <button\n                  className=\"flex gap-1 items-center\"\n                  onClick={() =>\n                    data.user_liked\n                      ? unlikeReply.mutate(data.id)\n                      : likeReply.mutate(data.id)\n                  }\n                >\n                  {data.user_liked ? (\n                    <HeartFillIcon color=\"#FFFFFF\" />\n                  ) : (\n                    <HeartIcon color=\"#FFFFFF\" />\n                  )}\n                </button>\n                <p className=\"text-center\">{data.like_count}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","\"use client\";\nimport { HeartFillIcon, HeartIcon } from \"@/app/components/icons\";\nimport { CommentWithUser } from \"$/types/data.types\";\nimport { timeAgo } from \"@/app/libs/timeAgo\";\nimport useAuthorUsername from \"@/hooks/useAuthorUserName\";\nimport Image from \"next/image\";\nimport {\n  useLikeComment,\n  useRealtimeReplies,\n  useReplies,\n  useUnlikeComment,\n} from \"@/hooks/useComments\";\nimport Reply from \"./Reply\";\nimport { useState } from \"react\";\nimport { formatNumber } from \"@/utils\";\nimport OptimizedImage from \"@/app/components/OptimizedImage\";\n\nexport default function Comment({\n  data,\n  setReplyTo,\n}: // setCommentToReply,\n{\n  data: CommentWithUser;\n  setReplyTo: (data: CommentWithUser | null) => void;\n  // setCommentToReply: (data: CommentWithUser) => void;\n}) {\n  const { data: user } = useAuthorUsername(data.user_id);\n  const likeComment = useLikeComment(data.post_id.toString());\n  const unlikeComment = useUnlikeComment(data.post_id.toString());\n  const [seeMore, setSeeMore] = useState(false);\n\n  const { data: replies } = useReplies(data.id);\n  useRealtimeReplies(data.id);\n\n  return (\n    <div className=\" gap-2 py-2  border-primary-10\">\n      <div className=\"flex w-full  gap-2\">\n        <div className=\"h-12 w-12\">\n          <OptimizedImage\n            src={data.avatar_url || \"/profile.jpg\"}\n            width={48}\n            height={48}\n            alt={`${user || \"User\"}'s profile picture`}\n            className=\"rounded-full\"\n            trackPerformance={true}\n            imageName={`comment-avatar-${data.user_id}`}\n          />\n        </div>\n        <div className=\"w-full\">\n          <div className=\"flex flex-col basis-1/6\">\n            <p className=\"text-primary-4 text-md font-medium whitespace-nowrap\">\n              {user}\n            </p>\n            <p className=\"text-xs\">{timeAgo(data.created_at)}</p>\n          </div>\n\n          <div className=\"flex gap-2 w-full py-2\">\n            <div className=\"flex-grow space-y-4 gap-4\">\n              <p className=\"text-primary-6 text-sm flex-grow\">{data.content}</p>\n              <button\n                className=\"text-primary-9  text-xs\"\n                onClick={() => {\n                  data.username = user as string;\n                  setReplyTo(data);\n                }}\n              >\n                reply ({replies ? formatNumber(replies.length) : \"\"})\n              </button>\n            </div>\n            <div className=\"justify-end\">\n              <button\n                className=\"flex gap-1 items-center\"\n                onClick={() =>\n                  data.user_liked\n                    ? unlikeComment.mutate(data.id)\n                    : likeComment.mutate(data.id)\n                }\n              >\n                {data.user_liked ? (\n                  <HeartFillIcon color=\"#FFFFFF\" />\n                ) : (\n                  <HeartIcon color=\"#FFFFFF\" />\n                )}\n              </button>\n              <p className=\"text-center\">{formatNumber(data.like_count)}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Reply list */}\n\n      {replies\n        ?.slice(0, seeMore ? replies.length : 2)\n        .map((reply: CommentWithUser, idx: number) => (\n          <Reply key={idx} data={reply} />\n        ))}\n\n      {replies && replies?.length > 2 && (\n        <p className=\"text-right\">\n          <button\n            onClick={() => setSeeMore(!seeMore)}\n            className=\"text-xs hover:underline\"\n          >\n            {seeMore ? \"Show Less\" : \"See More\"}\n          </button>\n        </p>\n      )}\n    </div>\n  );\n}\n","\"use client\";\nimport { useDoesUserFollow } from \"@/hooks/useDoesUserFollow\";\nimport { useUser } from \"@/hooks/useUser\";\nimport { useToggleFollow } from \"@/hooks/useToggleFollow\";\n\nexport function Following({ authorId }: { authorId: string }) {\n  const { userId } = useUser();\n  const { data: isFollowing, isLoading } = useDoesUserFollow(\n    userId as string,\n    authorId,\n  );\n  const toggleFollowMutation = useToggleFollow();\n\n  const handleFollowToggle = () => {\n    toggleFollowMutation.mutate({\n      followerId: userId as string,\n      followeeId: authorId,\n    });\n  };\n\n  return (\n    <div className=\" rounded-t-3xl my-3\">\n      {userId !== authorId && (\n        <button\n          disabled={toggleFollowMutation.isPending}\n          onClick={handleFollowToggle}\n          className={`flex items-center justify-center gap-1 rounded-full h-8 w-24 px-2 py-1 border-[1px] border-primary-8 bg-[#DADADA] text-primary-11 ${isFollowing ? \"bg-transparent\" : \"bg-primary-10\"}`}\n        >\n          {!isLoading && (\n            <p className=\"text-primary-5 text-sm\">\n              {isFollowing ? \"Unfollow\" : \"Follow\"}\n            </p>\n          )}\n        </button>\n      )}\n    </div>\n  );\n}\n","\"use client\";\nimport { BackIcon, CloseIcon, OptionMenuIcon } from \"@/app/components/icons\";\nimport Image from \"next/image\";\nimport ImageViewInteractions from \"../imageViewInteractions\";\nimport CommentTextbox from \"./commentTextbox\";\nimport Comment from \"./comment\";\nimport { useState } from \"react\";\nimport { useComments, useRealtimeComments } from \"@/hooks/useComments\";\nimport { CommentWithUser } from \"$/types/data.types\";\nimport ImageOptionMenu from \"../imageOptionMenu\";\nimport { IPhoto } from \"@/app/libs/interfaces\";\nimport { Following } from \"../followingBtn\";\nimport OptimizedImage from \"@/app/components/OptimizedImage\";\n\ninterface CommentAreaProps {\n  image: string;\n  imageLoading: boolean;\n  userName: string;\n  isLoading: boolean;\n  authorId: string;\n  postId: string;\n  imageDetails: IPhoto;\n  handleClose: () => void;\n}\n\nexport default function CommentArea({\n  image,\n  imageLoading,\n  userName,\n  isLoading,\n  authorId,\n  postId,\n  imageDetails,\n  handleClose,\n}: CommentAreaProps) {\n  const { data: comments } = useComments(postId);\n  useRealtimeComments(postId);\n  const [replyTo, setReplyTo] = useState<CommentWithUser | null>(null);\n\n  const handleCloseReply = () => {\n    setReplyTo(null);\n  };\n\n  return (\n    <div className=\"md:flex md:flex-col\">\n      <div className=\"md:p-[2px]\">\n        <div className=\"flex justify-between h-18 py-2 px-2 md:px-5 gap-5 w-full text-sm lg:text-base\">\n          <div className=\"flex gap-1 items-center\">\n            <div className=\"flex items-center\">\n              <button onClick={handleClose} className=\"p-4 md:hidden\">\n                <BackIcon width={24} height={24} color=\"#C1C1C1\" />\n              </button>\n              {!imageLoading && (\n                <OptimizedImage\n                  className=\"rounded-full border-[1px] border-primary-3 drop-shadow-lg\"\n                  src={image || \"\"}\n                  width={48}\n                  height={48}\n                  alt={`${userName || \"Unknown\"}'s profile picture`}\n                  imageName=\"comment-area-avatar\"\n                  trackPerformance={true}\n                />\n              )}\n            </div>\n\n            <div>\n              <p className=\"font-semibold text-lg leading-6 text-primary-2\">\n                {isLoading ? \"Loading...\" : userName || \"Unknown\"}\n              </p>\n              <p className=\"text-primary-7 nasalization\">Creator</p>\n            </div>\n\n            <div className=\" h-full pl-2\">\n              <Following authorId={authorId} />\n            </div>\n          </div>\n          <div className=\"h-full py-2\">\n            <ImageOptionMenu image={imageDetails}>\n              <OptionMenuIcon color=\"#C1C1C1\" />\n            </ImageOptionMenu>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"px-6\">\n        <hr />\n      </div>\n\n      <div\n        className={`py-2 px-6 overflow-y-auto ${\n          replyTo\n            ? \"h-[calc(100dvh_-_285px)] md:h-[346px]\"\n            : \"h-[calc(100dvh_-_235px)] md:h-[400px]\"\n        }`}\n      >\n        {comments?.map((comment: CommentWithUser, index: number) => (\n          <Comment key={index} data={comment} setReplyTo={setReplyTo} />\n        ))}\n      </div>\n\n      <div className=\"flex py-2 px-6 border-y-[1px] border-primary-6\">\n        <ImageViewInteractions\n          commentCount={comments?.length || 0}\n          postId={postId}\n        />\n      </div>\n\n      <div>\n        <CommentTextbox\n          postId={postId}\n          replyTo={replyTo}\n          closeReply={handleCloseReply}\n          authorId={authorId}\n        />\n      </div>\n    </div>\n  );\n}\n","\"use client\";\nimport { IPhoto } from \"@/app/libs/interfaces\";\nimport Image from \"next/image\";\nimport { ExtendedPhoto } from \"../formattedPhotos\";\nimport useAuthorUsername from \"@/hooks/useAuthorUserName\";\nimport useAuthorImage from \"@/hooks/useAuthorImage\";\nimport CommentArea from \"./comments/commentArea\";\nimport { useRef, useState, useEffect } from \"react\";\nimport OptimizedImage from \"@/app/components/OptimizedImage\";\nimport { startSpan } from \"@/utils/sentryUtils\";\n\ninterface GenerateTextFieldProps {\n  photo: boolean | IPhoto;\n  setImageIndex: (value: number) => void;\n}\n\nexport default function ImageView({\n  photo,\n  setImageIndex,\n}: GenerateTextFieldProps) {\n  const currentImage = photo as ExtendedPhoto;\n  const authorId = currentImage.author || \"\";\n  const { data: userName, isLoading } = useAuthorUsername(authorId);\n  const { data: image, isLoading: imageLoading } = useAuthorImage(authorId);\n  const [isImageVisible, setIsImageVisible] = useState(false);\n  const imgRef = useRef<HTMLDivElement | null>(null);\n\n  // Track how long it takes for the image to become visible in the viewport\n  useEffect(() => {\n    const finishSpan = startSpan(\n      `image-visibility-${\n        currentImage.src?.split(\"/\").pop()?.split(\"?\")[0] || \"unknown\"\n      }`,\n      \"image-visibility\",\n      { imageUrl: currentImage.src }\n    );\n\n    // Use Intersection Observer to detect when image enters viewport\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setIsImageVisible(true);\n            observer.disconnect();\n            finishSpan();\n          }\n        });\n      },\n      { threshold: 0.1 } // Trigger when 10% of the image is visible\n    );\n\n    if (imgRef.current) {\n      observer.observe(imgRef.current);\n    }\n\n    return () => {\n      observer.disconnect();\n      finishSpan(); // Clean up the span if component unmounts before visible\n    };\n  }, [currentImage.src]);\n\n  const handleClose = () => {\n    setImageIndex(-1);\n  };\n\n  if (!photo) return;\n\n  return (\n    <>\n      <div\n        onClick={handleClose}\n        className=\"relative  top-0 left-0 h-screen w-full bg-gray-950/50 inset-0\"\n      ></div>\n\n      <div className=\"fixed z-50 flex justify-center items-center top-0 left-0 h-screen w-full \">\n        <div\n          onClick={handleClose}\n          className=\"absolute flex justify-center items-center top-0 left-0 h-screen w-full \"\n        ></div>\n\n        <div className=\"z-10 w-full md:w-11/12 xl:w-8/12 max-w-[968px] h-[100dvh]  md:h-[643px] rounded-md border-primary-8 border-[1px] p-3 bg-primary-12\">\n          <div className=\"bg-primary-13 h-full w-full rounded-md\">\n            <div className=\"grid grid-cols-1 h-full md:grid-cols-2\">\n              <div className=\"h-full col-span-1 hidden md:block\">\n                <div className=\"relative w-full md:h-full\">\n                  <OptimizedImage\n                    src={currentImage.src}\n                    alt={currentImage.caption || \"Image\"}\n                    width={450}\n                    height={450}\n                    quality={75}\n                    priority={false}\n                    trackPerformance={true}\n                    imageName={\n                      currentImage.src?.split(\"/\").pop()?.split(\"?\")[0]\n                    }\n                    className=\"object-cover w-full h-full\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"h-full\">\n                <CommentArea\n                  image={image as string}\n                  imageLoading={imageLoading}\n                  userName={userName as string}\n                  isLoading={isLoading}\n                  authorId={authorId}\n                  postId={currentImage.id}\n                  imageDetails={currentImage}\n                  handleClose={handleClose}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import { supabase } from \"$/supabase/client\";\nimport { logError } from \"@/utils/sentryUtils\";\n\n// Check if one user follows another\nconst doesUserFollow = async (\n  followerId: string,\n  followeeId: string\n): Promise<boolean> => {\n  try {\n    const { data, error } = await supabase\n      .from(\"follows\")\n      .select(\"*\")\n      .eq(\"follower_id\", followerId)\n      .eq(\"followee_id\", followeeId)\n      .single();\n\n    if (error && error.code !== \"PGRST116\") {\n      logError(\"Error checking follow relationship\", error);\n      return false;\n    }\n\n    return !!data;\n  } catch (error) {\n    logError(\"Error in doesUserFollow\", error);\n    return false;\n  }\n};\n\nexport default doesUserFollow;\n","import doesUserFollow from \"@/queries/user/doesUserFollows\";\nimport { useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { dedupedRequest } from \"@/utils/queryOptimizer\";\nimport { useCallback } from \"react\";\n\n/**\n * Enhanced hook to check if one user follows another\n * Includes deduplication, optimized caching, and optimistic update methods\n */\nexport const useDoesUserFollow = (followerId: string, followeeId: string) => {\n  const queryClient = useQueryClient();\n\n  const result = useQuery<boolean, Error>({\n    queryKey: [\"doesUserFollow\", followerId, followeeId], // Unique query key\n    queryFn: async () => {\n      if (!followerId || !followeeId) return false;\n\n      // Use request deduplication to prevent duplicate API calls\n      return dedupedRequest(`doesUserFollow-${followerId}-${followeeId}`, () =>\n        doesUserFollow(followerId, followeeId)\n      );\n    },\n    enabled: !!followerId && !!followeeId, // Prevents running on empty values\n    staleTime: 1000 * 60 * 10, // Cache results for 10 minutes\n    gcTime: 1000 * 60 * 30, // Keep unused data for 30 minutes\n  });\n\n  // Helper for optimistic updates when following\n  const setFollowing = useCallback(\n    (isFollowing: boolean) => {\n      if (!followerId || !followeeId) return;\n\n      // Update follow status\n      queryClient.setQueryData(\n        [\"doesUserFollow\", followerId, followeeId],\n        isFollowing\n      );\n\n      // Also update related follow stats if they exist in the cache\n      if (isFollowing) {\n        // Update follower's followees count\n        queryClient.setQueryData([\"followStats\", followerId], (old: any) =>\n          old\n            ? {\n                ...old,\n                followeeCount: old.followeeCount + 1,\n              }\n            : undefined\n        );\n\n        // Update followee's followers count\n        queryClient.setQueryData([\"followStats\", followeeId], (old: any) =>\n          old\n            ? {\n                ...old,\n                followerCount: old.followerCount + 1,\n              }\n            : undefined\n        );\n      } else {\n        // Update follower's followees count (decrement)\n        queryClient.setQueryData([\"followStats\", followerId], (old: any) =>\n          old\n            ? {\n                ...old,\n                followeeCount: Math.max(0, old.followeeCount - 1),\n              }\n            : undefined\n        );\n\n        // Update followee's followers count (decrement)\n        queryClient.setQueryData([\"followStats\", followeeId], (old: any) =>\n          old\n            ? {\n                ...old,\n                followerCount: Math.max(0, old.followerCount - 1),\n              }\n            : undefined\n        );\n      }\n    },\n    [followerId, followeeId, queryClient]\n  );\n\n  // Refresh helper\n  const refresh = useCallback(() => {\n    if (!followerId || !followeeId) return;\n\n    queryClient.invalidateQueries({\n      queryKey: [\"doesUserFollow\", followerId, followeeId],\n      exact: true,\n    });\n  }, [followerId, followeeId, queryClient]);\n\n  return {\n    ...result,\n    isFollowing: result.data || false,\n    setFollowing,\n    refresh,\n  };\n};\n","import { supabase } from \"$/supabase/client\";\nimport { log, logError } from \"@/utils/sentryUtils\";\n\n// Toggle follow/unfollow status\nconst toggleFollow = async (followerId: string, followeeId: string) => {\n  if (!followerId || !followeeId || followerId === followeeId) return;\n\n  // Check current follow status\n  const { data, error } = await supabase\n    .from(\"follows\")\n    .select(\"*\")\n    .eq(\"follower_id\", followerId)\n    .eq(\"followee_id\", followeeId)\n    .single();\n\n  if (error && error.code !== \"PGRST116\") {\n    logError(\"Error fetching follow relationship\", error);\n    return;\n  }\n\n  if (data) {\n    // If already following, unfollow\n    const { error: deleteError } = await supabase\n      .from(\"follows\")\n      .delete()\n      .eq(\"follower_id\", followerId)\n      .eq(\"followee_id\", followeeId);\n\n    if (deleteError) {\n      logError(\"Error deleting follow relationship\", deleteError);\n    } else {\n      log(\"Unfollowed user\", { followerId, followeeId });\n    }\n  } else {\n    // If not following, follow\n    const { error: insertError } = await supabase\n      .from(\"follows\")\n      .insert([{ follower_id: followerId, followee_id: followeeId }]);\n\n    if (insertError) {\n      logError(\"Error adding follow relationship\", insertError);\n    } else {\n      log(\"Followed user\", { followerId, followeeId });\n    }\n  }\n};\n\nexport default toggleFollow;\n","import { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport toggleFollow from \"@/queries/user/toggleFollow\";\nimport { useCallback } from \"react\";\nimport { logError } from \"@/utils/sentryUtils\";\n\ninterface FollowStats {\n  followeeCount: number;\n  followerCount: number;\n}\n\n/**\n * Enhanced hook to toggle follow status with optimistic updates\n * and integration with related queries\n */\nexport const useToggleFollow = () => {\n  const queryClient = useQueryClient();\n\n  const mutation = useMutation({\n    mutationFn: async ({\n      followerId,\n      followeeId,\n      isFollowing,\n    }: {\n      followerId: string;\n      followeeId: string;\n      isFollowing?: boolean;\n    }) => {\n      const result = await toggleFollow(followerId, followeeId);\n      return { result, isFollowing };\n    },\n\n    onMutate: async ({ followerId, followeeId, isFollowing }) => {\n      // Cancel any outgoing refetches\n      await Promise.all([\n        queryClient.cancelQueries({\n          queryKey: [\"doesUserFollow\", followerId, followeeId],\n        }),\n        queryClient.cancelQueries({ queryKey: [\"followStats\", followerId] }),\n        queryClient.cancelQueries({ queryKey: [\"followStats\", followeeId] }),\n      ]);\n\n      // Snapshot the previous values for rollback\n      const previousFollowStatus = queryClient.getQueryData([\n        \"doesUserFollow\",\n        followerId,\n        followeeId,\n      ]);\n\n      const previousFollowerStats = queryClient.getQueryData<FollowStats>([\n        \"followStats\",\n        followerId,\n      ]);\n\n      const previousFolloweeStats = queryClient.getQueryData<FollowStats>([\n        \"followStats\",\n        followeeId,\n      ]);\n\n      // Optimistically update follow status\n      queryClient.setQueryData(\n        [\"doesUserFollow\", followerId, followeeId],\n        !isFollowing\n      );\n\n      // Optimistically update follower stats\n      if (previousFollowerStats) {\n        queryClient.setQueryData<FollowStats>([\"followStats\", followerId], {\n          ...previousFollowerStats,\n          followeeCount: !isFollowing\n            ? previousFollowerStats.followeeCount + 1\n            : Math.max(0, previousFollowerStats.followeeCount - 1),\n        });\n      }\n\n      // Optimistically update followee stats\n      if (previousFolloweeStats) {\n        queryClient.setQueryData<FollowStats>([\"followStats\", followeeId], {\n          ...previousFolloweeStats,\n          followerCount: !isFollowing\n            ? previousFolloweeStats.followerCount + 1\n            : Math.max(0, previousFolloweeStats.followerCount - 1),\n        });\n      }\n\n      // Return context to be used on rollback\n      return {\n        previousFollowStatus,\n        previousFollowerStats,\n        previousFolloweeStats,\n      };\n    },\n\n    onError: (error, { followerId, followeeId }, context) => {\n      logError(\"Error toggling follow status\", error);\n\n      // Rollback to previous values on error\n      if (context?.previousFollowStatus !== undefined) {\n        queryClient.setQueryData(\n          [\"doesUserFollow\", followerId, followeeId],\n          context.previousFollowStatus\n        );\n      }\n\n      if (context?.previousFollowerStats) {\n        queryClient.setQueryData(\n          [\"followStats\", followerId],\n          context.previousFollowerStats\n        );\n      }\n\n      if (context?.previousFolloweeStats) {\n        queryClient.setQueryData(\n          [\"followStats\", followeeId],\n          context.previousFolloweeStats\n        );\n      }\n    },\n\n    onSuccess: (data, { followerId, followeeId }) => {\n      // Refresh data to ensure consistency\n      queryClient.invalidateQueries({\n        queryKey: [\"doesUserFollow\", followerId, followeeId],\n      });\n\n      // Update user profiles\n      queryClient.invalidateQueries({\n        queryKey: [\"user\", followerId],\n      });\n\n      queryClient.invalidateQueries({\n        queryKey: [\"user\", followeeId],\n      });\n    },\n  });\n\n  // Helper method for better ergonomics\n  const toggleFollowUser = useCallback(\n    (\n      followerId: string,\n      followeeId: string,\n      isCurrentlyFollowing?: boolean\n    ) => {\n      return mutation.mutate({\n        followerId,\n        followeeId,\n        isFollowing: isCurrentlyFollowing,\n      });\n    },\n    [mutation]\n  );\n\n  return {\n    ...mutation,\n    toggleFollowUser,\n  };\n};\n\nexport default useToggleFollow;\n","\"use client\";\nimport { useState } from \"react\";\nimport GenerateTextField from \"./generateTextField\";\nimport { HandBrushIcon } from \"@/app/components/icons\";\n\nexport default function GenerateInput() {\n  const [open, setOpen] = useState(false);\n  return (\n    <>\n      <h1 className=\"text-center text-4xl text-primary-1 nasalization\">\n        Create Anything Imaginable\n      </h1>\n\n      <div className=\"w-4/5 max-w-4xl mt-7\">\n        <div className=\"relative h-12 flex w-full rounded-l-full mb-10\">\n          <div className=\"absolute left-4 top-2.5\">\n            <HandBrushIcon color=\"#FFFFFF\" />\n          </div>\n          <input\n            onClick={() => setOpen(true)}\n            className=\"basis-5/6 outline-none indent-12 rounded-l-full bg-primary-12 border-[1px] border-primary-9\"\n            placeholder=\"Generate stunning AI images in seconds\"\n          />\n          <button\n            onClick={() => setOpen(true)}\n            className=\"basis-1/6 text-primary-11 bg-primary-5 font-semibold rounded-r-full px-6\"\n          >\n            Generate\n          </button>\n        </div>\n      </div>\n      <GenerateTextField open={open} setOpen={setOpen} />\n    </>\n  );\n}\n"],"names":["ImageViewInteractions","commentCount","postId","data","likes","usePostLikes","Number","supabase","userId","useUser","post","usePost","openShare","setOpenShare","useState","mutate","toggleLike","useLikePost","author","shareCount","shareNotifications","useCountShareNotifications","userHasLiked","some","like","div","className","button","onClick","HeartFillIcon","color","HeartIcon","p","formatNumber","length","MessageIcon","ShareIcon","ShareModal","open","setOpen","link","downloadImage","getImage","ipfsImages","hash","fileNames","DownloadIcon","CommentTextbox","replyTo","closeReply","authorId","postComment","usePostComment","content","setContent","handleSubmit","e","preventDefault","trim","post_id","parent_id","id","senderId","CloseIcon","width","height","OptimizedImage","src","avatar_url","alt","username","trackPerformance","imageName","user_id","form","onSubmit","EmojiIcon","textarea","onChange","target","value","disabled","type","Reply","user","useAuthorUsername","likeReply","useLikeReply","toString","unlikeReply","useUnlikeReply","timeAgo","created_at","user_liked","like_count","Comment","setReplyTo","likeComment","useLikeComment","unlikeComment","useUnlikeComment","seeMore","setSeeMore","replies","useReplies","useRealtimeReplies","slice","map","reply","idx","Following","isFollowing","isLoading","useDoesUserFollow","toggleFollowMutation","useToggleFollow","isPending","handleFollowToggle","followerId","followeeId","CommentArea","image","imageLoading","userName","imageDetails","handleClose","comments","useComments","useRealtimeComments","BackIcon","ImageOptionMenu","OptionMenuIcon","hr","comment","index","handleCloseReply","ImageView","photo","setImageIndex","useAuthorImage","isImageVisible","setIsImageVisible","useRef","currentImage","caption","quality","priority","split","pop","doesUserFollow","error","from","select","eq","single","code","logError","queryClient","useQueryClient","result","useQuery","queryKey","queryFn","dedupedRequest","enabled","staleTime","gcTime","useCallback","setQueryData","old","followeeCount","undefined","followerCount","Math","max","refresh","invalidateQueries","exact","setFollowing","toggleFollow","deleteError","delete","log","insertError","insert","follower_id","followee_id","mutation","useMutation","mutationFn","onMutate","Promise","all","cancelQueries","previousFollowStatus","getQueryData","previousFollowerStats","previousFolloweeStats","onError","context","onSuccess","toggleFollowUser","isCurrentlyFollowing","GenerateInput","h1","HandBrushIcon","input","placeholder","GenerateTextField"],"sourceRoot":""}