try{let e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:{},a=(new e.Error).stack;a&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[a]="7a5d0bf2-09e4-4010-aecc-c86e80d15bc7",e._sentryDebugIdIdentifier="sentry-dbid-7a5d0bf2-09e4-4010-aecc-c86e80d15bc7")}catch(e){}"use strict";exports.id=74426,exports.ids=[74426],exports.modules={74426:(e,a,s)=>{s.d(a,{onSessionProposal:()=>n});var i=s(87447),o=s(29031);async function n(e){let{wallet:a,walletConnectClient:s,event:n,chains:d,onConnect:p}=e,c=a.getAccount();if(!c)throw Error("No account connected to provided wallet");let l=n.verifyContext?.verified?.origin;l&&await t({origin:l,walletConnectClient:s});let m=await r({account:c,walletConnectClient:s,sessionProposal:n,chains:d});await (0,o.E1)(m),a.subscribe("disconnect",()=>{(0,i.EF)({session:m,walletConnectClient:s})}),p?.(m)}async function t({walletConnectClient:e,origin:a}){for(let s of(await (0,o.S5)()))s.origin===a&&await (0,i.EF)({session:s,walletConnectClient:e})}async function r({account:e,walletConnectClient:a,sessionProposal:s,chains:i}){if(!s.params.requiredNamespaces?.eip155&&!s.params.optionalNamespaces?.eip155)throw Error("No EIP155 namespace found in Wallet Connect session proposal");let o={chains:[...Array.from(new Set([...s.params.requiredNamespaces?.eip155?.chains?.map(a=>`${a}:${e.address}`)??[],...s.params.optionalNamespaces?.eip155?.chains?.map(a=>`${a}:${e.address}`)??[],...i?.map(a=>`eip155:${a.id}:${e.address}`)??[]]))],methods:[...s.params.requiredNamespaces?.eip155?.methods??[],...s.params.optionalNamespaces?.eip155?.methods??[]],events:[...s.params.requiredNamespaces?.eip155?.events??[],...s.params.optionalNamespaces?.eip155?.events??[]]},n=await a.approve({id:s.id,namespaces:{eip155:{accounts:o.chains,methods:o.methods,events:o.events}}});return{topic:(await n.acknowledged()).topic,origin:s.verifyContext?.verified?.origin||"Unknown origin"}}}};
//# sourceMappingURL=74426.js.map