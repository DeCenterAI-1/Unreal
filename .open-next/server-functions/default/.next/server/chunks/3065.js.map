{"version":3,"file":"3065.js","mappings":"kgBAwCA,MAlCA,YACA,WAAY,KAiCG,EAjCH,qBAiC0B,CAjC1B,2BAAyD,EACrE,MAAkD,cAAQ,KAC1D,EAAoB,iBAAW,MAC/B,MACA,EACA,SACA,gBACA,cACS,EACT,UACA,GACA,CAAS,EACT,UACA,iBACA,KACA,CAAS,CACT,CAAK,yBACL,EAAwB,YAAM,KAQ9B,MAPI,eAAS,OACb,YAGA,aACA,IACA,CAAK,MACO,SAAI,CAAC,GAAgB,EAAI,QACrC,gCACA,2CACA,kCACA,yCACA,gCACA,CAAS,iHAA4L,CACrM","sources":["webpack://unreal/./node_modules/.pnpm/thirdweb@5.93.5_@aws-sdk+client-lambda@3.777.0_@types+react-dom@19.0.4_@types+react@19.0.12___ouklnsjwvogyqsuwnvucv7k7o4/node_modules/thirdweb/dist/esm/react/web/wallets/shared/CoinbaseSDKConnection.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { ConnectingScreen } from \"./ConnectingScreen.js\";\n/**\n * @internal\n */\nfunction ExternalWalletConnectUI(props) {\n    const { onBack, done, wallet, walletInfo, onGetStarted, locale } = props;\n    const [errorConnecting, setErrorConnecting] = useState(false);\n    const connect = useCallback(() => {\n        setErrorConnecting(false);\n        wallet\n            .connect({\n            client: props.client,\n            chain: props.chain,\n        })\n            .then(() => {\n            done();\n        })\n            .catch((e) => {\n            console.error(e);\n            setErrorConnecting(true);\n        });\n    }, [props.client, wallet, props.chain, done]);\n    const scanStarted = useRef(false);\n    useEffect(() => {\n        if (scanStarted.current) {\n            return;\n        }\n        scanStarted.current = true;\n        connect();\n    }, [connect]);\n    return (_jsx(ConnectingScreen, { locale: {\n            getStartedLink: locale.getStartedLink,\n            instruction: locale.connectionScreen.instruction,\n            tryAgain: locale.connectionScreen.retry,\n            inProgress: locale.connectionScreen.inProgress,\n            failed: locale.connectionScreen.failed,\n        }, onBack: onBack, walletName: walletInfo.name, walletId: wallet.id, errorConnecting: errorConnecting, onRetry: connect, onGetStarted: onGetStarted, client: props.client, size: props.size }));\n}\nexport default ExternalWalletConnectUI;\n//# sourceMappingURL=CoinbaseSDKConnection.js.map"],"names":[],"sourceRoot":""}