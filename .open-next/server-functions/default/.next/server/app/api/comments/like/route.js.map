{"version":3,"file":"../app/api/comments/like/route.js","mappings":"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","sources":["webpack://unreal/external commonjs \"next/dist/server/app-render/after-task-async-storage.external.js\"","webpack://unreal/external commonjs2 \"module\"","webpack://unreal/external commonjs \"next/dist/compiled/next-server/app-page.runtime.prod.js\"","webpack://unreal/external commonjs2 \"punycode\"","webpack://unreal/./supabase/server.ts","webpack://unreal/external commonjs2 \"process\"","webpack://unreal/external commonjs2 \"os\"","webpack://unreal/external commonjs2 \"stream\"","webpack://unreal/external commonjs2 \"util\"","webpack://unreal/src/app/api/comments/like/route.ts","webpack://unreal/sentry-wrapper-module","webpack://unreal/?e303","webpack://unreal/external commonjs2 \"fs\"","webpack://unreal/external commonjs \"next/dist/server/app-render/work-async-storage.external.js\"","webpack://unreal/external node-commonjs \"node:child_process\"","webpack://unreal/external commonjs2 \"path\"","webpack://unreal/external commonjs2 \"diagnostics_channel\"","webpack://unreal/external node-commonjs \"node:http\"","webpack://unreal/external node-commonjs \"node:zlib\"","webpack://unreal/external node-commonjs \"node:tls\"","webpack://unreal/external node-commonjs \"node:https\"","webpack://unreal/external commonjs \"next/dist/compiled/next-server/app-route.runtime.prod.js\"","webpack://unreal/external node-commonjs \"node:os\"","webpack://unreal/external node-commonjs \"node:diagnostics_channel\"","webpack://unreal/./src/utils/sentryUtils.ts","webpack://unreal/external commonjs2 \"crypto\"","webpack://unreal/external commonjs2 \"https\"","webpack://unreal/external commonjs2 \"tls\"","webpack://unreal/external node-commonjs \"node:stream\"","webpack://unreal/external node-commonjs \"node:util\"","webpack://unreal/external commonjs \"next/dist/server/app-render/work-unit-async-storage.external.js\"","webpack://unreal/external node-commonjs \"node:fs\"","webpack://unreal/external commonjs2 \"worker_threads\"","webpack://unreal/external commonjs2 \"zlib\"","webpack://unreal/external commonjs2 \"perf_hooks\"","webpack://unreal/external node-commonjs \"node:worker_threads\"","webpack://unreal/external node-commonjs \"node:path\"","webpack://unreal/external node-commonjs \"node:net\"","webpack://unreal/external commonjs2 \"buffer\"","webpack://unreal/external commonjs2 \"url\"","webpack://unreal/external commonjs2 \"child_process\"","webpack://unreal/external node-commonjs \"node:readline\"","webpack://unreal/external commonjs2 \"http\"","webpack://unreal/external commonjs2 \"tty\"","webpack://unreal/external commonjs2 \"async_hooks\"","webpack://unreal/external node-commonjs \"node:inspector\"","webpack://unreal/./node_modules/.pnpm/@opentelemetry+instrumentation@0.57.2_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/ sync","webpack://unreal/./node_modules/.pnpm/require-in-the-middle@7.5.2/node_modules/require-in-the-middle/ sync","webpack://unreal/external commonjs2 \"net\"","webpack://unreal/./node_modules/.pnpm/next@15.2.4_@babel+core@7.26.10_@opentelemetry+api@1.9.0_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/server/create-deduped-by-callsite-server-error-logger.js","webpack://unreal/external commonjs2 \"events\""],"sourcesContent":["module.exports = require(\"next/dist/server/app-render/after-task-async-storage.external.js\");","module.exports = require(\"module\");","module.exports = require(\"next/dist/compiled/next-server/app-page.runtime.prod.js\");","module.exports = require(\"punycode\");","import { createServerClient } from \"@supabase/ssr\";\nimport { cookies } from \"next/headers\";\nimport { SupabaseClient } from \"@supabase/supabase-js\";\nimport type { Database } from \"$/types/database.types\";\n\nexport async function createClient(): Promise<SupabaseClient<Database>> {\n  const cookieStore = await cookies();\n\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        getAll() {\n          return cookieStore.getAll();\n        },\n        setAll(cookiesToSet) {\n          try {\n            cookiesToSet.forEach(({ name, value, options }) =>\n              cookieStore.set(name, value, options),\n            );\n          } catch {\n            // The `setAll` method was called from a Server Component.\n            // This can be ignored if you have middleware refreshing\n            // user sessions.\n          }\n        },\n      },\n      auth: {\n        autoRefreshToken: true,\n        persistSession: true,\n        detectSessionInUrl: true,\n      },\n    },\n  );\n}\n","module.exports = require(\"process\");","module.exports = require(\"os\");","module.exports = require(\"stream\");","module.exports = require(\"util\");","import { createClient } from \"$/supabase/server\";\nimport { NextResponse } from \"next/server\";\nimport { logError, logWarning } from \"@/utils/sentryUtils\";\n\n// ✅ Like a comment\nexport async function POST(req: Request) {\n  const supabase = await createClient();\n  try {\n    const { comment_id } = await req.json();\n    const user = await supabase.auth.getUser();\n\n    if (!user || !user.data.user) {\n      logWarning(\"Unauthorized comment like attempt\");\n      return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\n    }\n    \n    if (!comment_id) {\n      logWarning(\"Comment like missing comment_id\", { userId: user.data.user.id });\n      return NextResponse.json(\n        { error: \"Comment ID is required\" },\n        { status: 400 },\n      );\n    }\n\n    const { data, error } = await supabase\n      .from(\"comment_likes\")\n      .insert([\n        { comment_id: comment_id, user_id: user.data.user.id },\n      ]);\n\n    if (error) {\n      logError(\"Error liking comment\", {\n        error,\n        comment_id,\n        user_id: user.data.user.id\n      });\n      return NextResponse.json({ error: error.message }, { status: 500 });\n    }\n\n    return NextResponse.json({ message: \"Liked successfully\", data });\n  } catch (error: any) {\n    logError(\"Unexpected error in comment like\", error);\n    return NextResponse.json({ error: error.message }, { status: 500 });\n  }\n}\n\n// ✅ Unlike a comment\nexport async function DELETE(req: Request) {\n  const supabase = await createClient();\n  try {\n    const { comment_id } = await req.json();\n    const user = await supabase.auth.getUser();\n\n    if (!user || !user.data.user) {\n      logWarning(\"Unauthorized comment unlike attempt\");\n      return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\n    }\n    \n    if (!comment_id) {\n      logWarning(\"Comment unlike missing comment_id\", { userId: user.data.user.id });\n      return NextResponse.json(\n        { error: \"Comment ID is required\" },\n        { status: 400 },\n      );\n    }\n\n    const { error } = await supabase\n      .from(\"comment_likes\")\n      .delete()\n      .match({\n        comment_id: comment_id,\n        user_id: user.data.user.id,\n      });\n\n    if (error) {\n      logError(\"Error unliking comment\", {\n        error,\n        comment_id,\n        user_id: user.data.user.id\n      });\n      return NextResponse.json({ error: error.message }, { status: 500 });\n    }\n\n    return NextResponse.json({ message: \"Unliked successfully\" });\n  } catch (error: any) {\n    logError(\"Unexpected error in comment unlike\", error);\n    return NextResponse.json({ error: error.message }, { status: 500 });\n  }\n}\n","import * as Sentry from '@sentry/nextjs';\nimport * as origModule from 'next/dist/server/app-render/work-unit-async-storage.external.js';\nimport * as serverComponentModule from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport * from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport {} from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\n\nconst asyncStorageModule = { ...origModule } ;\n\nconst requestAsyncStorage =\n  'workUnitAsyncStorage' in asyncStorageModule\n    ? asyncStorageModule.workUnitAsyncStorage\n    : 'requestAsyncStorage' in asyncStorageModule\n      ? asyncStorageModule.requestAsyncStorage\n      : undefined;\n\nfunction wrapHandler(handler, method) {\n  // Running the instrumentation code during the build phase will mark any function as \"dynamic\" because we're accessing\n  // the Request object. We do not want to turn handlers dynamic so we skip instrumentation in the build phase.\n  if (process.env.NEXT_PHASE === 'phase-production-build') {\n    return handler;\n  }\n\n  if (typeof handler !== 'function') {\n    return handler;\n  }\n\n  return new Proxy(handler, {\n    apply: (originalFunction, thisArg, args) => {\n      let headers = undefined;\n\n      // We try-catch here just in case the API around `requestAsyncStorage` changes unexpectedly since it is not public API\n      try {\n        const requestAsyncStore = requestAsyncStorage?.getStore() ;\n        headers = requestAsyncStore?.headers;\n      } catch (e) {\n        /** empty */\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return Sentry.wrapRouteHandlerWithSentry(originalFunction , {\n        method,\n        parameterizedRoute: '/api/comments/like',\n        headers,\n      }).apply(thisArg, args);\n    },\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst GET = wrapHandler(serverComponentModule.GET , 'GET');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst POST = wrapHandler(serverComponentModule.POST , 'POST');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PUT = wrapHandler(serverComponentModule.PUT , 'PUT');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PATCH = wrapHandler(serverComponentModule.PATCH , 'PATCH');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst DELETE = wrapHandler(serverComponentModule.DELETE , 'DELETE');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst HEAD = wrapHandler(serverComponentModule.HEAD , 'HEAD');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst OPTIONS = wrapHandler(serverComponentModule.OPTIONS , 'OPTIONS');\n\nexport { DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT };\n","import { AppRouteRouteModule } from \"next/dist/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/Users/a0000/projects/unreal/src/app/api/comments/like/route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/comments/like/route\",\n        pathname: \"/api/comments/like\",\n        filename: \"route\",\n        bundlePath: \"app/api/comments/like/route\"\n    },\n    resolvedPagePath: \"/Users/a0000/projects/unreal/src/app/api/comments/like/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","module.exports = require(\"fs\");","module.exports = require(\"next/dist/server/app-render/work-async-storage.external.js\");","module.exports = require(\"node:child_process\");","module.exports = require(\"path\");","module.exports = require(\"diagnostics_channel\");","module.exports = require(\"node:http\");","module.exports = require(\"node:zlib\");","module.exports = require(\"node:tls\");","module.exports = require(\"node:https\");","module.exports = require(\"next/dist/compiled/next-server/app-route.runtime.prod.js\");","module.exports = require(\"node:os\");","module.exports = require(\"node:diagnostics_channel\");","import * as Sentry from \"@sentry/nextjs\";\n\n// Track throttled messages to avoid duplicates\ninterface ThrottleCache {\n  [key: string]: {\n    timestamp: number;\n    count: number;\n  };\n}\n\n// Cache for throttling\nconst messageCache: ThrottleCache = {};\nconst MIN_THROTTLE_MS = 5000; // 5 seconds between identical messages\nconst MAX_CACHE_SIZE = 100;\nconst MAX_OBJECT_SIZE = 5000; // Characters limit for stringified objects\n\n/**\n * Safely stringify data, with size limits to prevent performance issues\n */\nconst safeStringify = (data: any): string => {\n  if (data === undefined || data === null) return \"\";\n  if (typeof data === \"string\") return data.substring(0, MAX_OBJECT_SIZE);\n\n  try {\n    const str = JSON.stringify(data);\n    return str.length > MAX_OBJECT_SIZE\n      ? str.substring(0, MAX_OBJECT_SIZE) + \"...[truncated]\"\n      : str;\n  } catch (e) {\n    return \"[Object cannot be serialized]\";\n  }\n};\n\n/**\n * Clean the throttle cache periodically\n */\nconst cleanThrottleCache = (): void => {\n  const now = Date.now();\n  const keys = Object.keys(messageCache);\n\n  if (keys.length > MAX_CACHE_SIZE) {\n    // Remove oldest entries if cache is too large\n    const oldestKeys = keys\n      .map((key) => {\n        // Add safety check for undefined entries\n        if (\n          !messageCache[key] ||\n          typeof messageCache[key].timestamp !== \"number\"\n        ) {\n          return { key, time: 0 };\n        }\n        return { key, time: messageCache[key].timestamp };\n      })\n      .sort((a, b) => a.time - b.time)\n      .slice(0, keys.length - MAX_CACHE_SIZE / 2)\n      .map((item) => item.key);\n\n    oldestKeys.forEach((key) => delete messageCache[key]);\n  }\n\n  // Remove expired entries\n  keys.forEach((key) => {\n    // Add safety check for undefined entries\n    if (\n      messageCache[key] &&\n      typeof messageCache[key].timestamp === \"number\" &&\n      now - messageCache[key].timestamp > MIN_THROTTLE_MS * 10\n    ) {\n      delete messageCache[key];\n    } else if (\n      !messageCache[key] ||\n      typeof messageCache[key].timestamp !== \"number\"\n    ) {\n      // Remove invalid entries that could cause errors\n      delete messageCache[key];\n    }\n  });\n};\n\n// Clean cache every minute\nif (typeof window !== \"undefined\") {\n  setInterval(cleanThrottleCache, 60000);\n}\n\n/**\n * Check if a message is throttled\n * Returns true if the message should be skipped\n */\nconst isThrottled = (cacheKey: string): boolean => {\n  const now = Date.now();\n\n  if (messageCache[cacheKey]) {\n    const { timestamp, count } = messageCache[cacheKey];\n    const elapsed = now - timestamp;\n\n    if (elapsed < MIN_THROTTLE_MS) {\n      // Update count but don't send\n      messageCache[cacheKey].count++;\n      return true;\n    }\n\n    // Update timestamp and count\n    messageCache[cacheKey].timestamp = now;\n    messageCache[cacheKey].count++;\n  } else {\n    // First occurrence\n    messageCache[cacheKey] = { timestamp: now, count: 1 };\n\n    // Clean cache if it gets too large\n    if (Object.keys(messageCache).length > MAX_CACHE_SIZE) {\n      cleanThrottleCache();\n    }\n  }\n\n  return false;\n};\n\n/**\n * Log an error to Sentry with additional context\n */\nexport const captureException = (\n  error: Error | unknown,\n  context?: Record<string, any>\n): void => {\n  // Skip in development for better performance, just log to console\n  if (process.env.NODE_ENV === \"development\") {\n    console.error(error, context);\n    return;\n  }\n\n  // Create a throttle key based on error message\n  const errorMessage = error instanceof Error ? error.message : String(error);\n  const throttleKey = `error:${errorMessage.substring(0, 100)}`;\n\n  if (isThrottled(throttleKey)) return;\n\n  // Limit context size to prevent performance issues\n  const safeContext = context\n    ? Object.fromEntries(\n        Object.entries(context).map(([key, value]) => [\n          key,\n          safeStringify(value),\n        ])\n      )\n    : undefined;\n\n  if (error instanceof Error) {\n    Sentry.captureException(error, {\n      extra: safeContext,\n    });\n  } else {\n    Sentry.captureException(new Error(String(error)), {\n      extra: safeContext,\n    });\n  }\n};\n\n/**\n * Log a message to Sentry at the specified level\n */\nexport const captureMessage = (\n  message: string,\n  level: Sentry.SeverityLevel = \"info\",\n  context?: Record<string, any>\n): void => {\n  // Skip low-priority messages in production\n  if (process.env.NODE_ENV === \"production\" && level === \"info\") {\n    return;\n  }\n\n  // Limit message size\n  const safeMessage = message.substring(0, 200);\n\n  // Create throttle key based on message\n  const throttleKey = `${level}:${safeMessage}`;\n\n  if (isThrottled(throttleKey)) return;\n\n  // Limit context size\n  const safeContext = context\n    ? Object.fromEntries(\n        Object.entries(context).map(([key, value]) => [\n          key,\n          safeStringify(value),\n        ])\n      )\n    : undefined;\n\n  Sentry.captureMessage(safeMessage, {\n    level,\n    extra: safeContext,\n  });\n};\n\n/**\n * Set the current user for Sentry tracking\n */\nexport const setUser = (\n  id: string | null,\n  email?: string,\n  username?: string,\n  additionalData?: Record<string, any>\n): void => {\n  if (id) {\n    Sentry.setUser({\n      id,\n      email,\n      username,\n      ...additionalData,\n    });\n  } else {\n    // Clear user data when id is null\n    Sentry.setUser(null);\n  }\n};\n\n/**\n * Add breadcrumb to track user or system actions\n */\nexport const addBreadcrumb = (\n  message: string,\n  category?: string,\n  level: Sentry.SeverityLevel = \"info\",\n  data?: Record<string, any>\n): void => {\n  // Skip breadcrumbs in production for better performance\n  if (process.env.NODE_ENV === \"production\" && level === \"info\") {\n    return;\n  }\n\n  // Limit data size\n  const safeData = data\n    ? Object.fromEntries(\n        Object.entries(data).map(([key, value]) => [key, safeStringify(value)])\n      )\n    : undefined;\n\n  Sentry.addBreadcrumb({\n    message: message.substring(0, 100),\n    category,\n    level,\n    data: safeData,\n  });\n};\n\n/**\n * Set context information for current scope\n */\nexport const setContext = (\n  name: string,\n  context: Record<string, any>\n): void => {\n  // Limit context size\n  const safeContext = Object.fromEntries(\n    Object.entries(context).map(([key, value]) => [key, safeStringify(value)])\n  );\n\n  Sentry.setContext(name, safeContext);\n};\n\n/**\n * Replace console.log in production\n * In development, it will only log to console\n * In production, it will send to Sentry as warning-level message only if important\n */\nexport const log = (message: string, data?: any): void => {\n  const isDev = process.env.NODE_ENV === \"development\";\n\n  if (isDev) {\n    console.log(message, data);\n    return;\n  }\n\n  // In production, only log critical info\n  // Most info logs can be skipped entirely\n  if (\n    message.includes(\"error\") ||\n    message.includes(\"fail\") ||\n    message.includes(\"critical\")\n  ) {\n    captureMessage(`${message}`, \"warning\");\n  }\n};\n\n/**\n * Replace console.error in production\n * Always captures as error in Sentry, only logs to console in development\n */\nexport const logError = (message: string, error?: Error | unknown): void => {\n  const isDev = process.env.NODE_ENV === \"development\";\n\n  if (isDev) {\n    console.error(message, error);\n    return;\n  }\n\n  // Create throttle key for this error\n  const errorMessage = error instanceof Error ? error.message : String(error);\n  const throttleKey = `error:${message}:${errorMessage.substring(0, 50)}`;\n\n  if (isThrottled(throttleKey)) return;\n\n  if (error) {\n    captureException(error, { message });\n  } else {\n    captureMessage(message, \"error\");\n  }\n};\n\n/**\n * Replace console.warn in production\n * Captures as warning in Sentry, only logs to console in development\n */\nexport const logWarning = (message: string, data?: any): void => {\n  const isDev = process.env.NODE_ENV === \"development\";\n\n  if (isDev) {\n    console.warn(message, data);\n    return;\n  }\n\n  // Create throttle key for this warning\n  const throttleKey = `warning:${message}`;\n\n  if (isThrottled(throttleKey)) return;\n\n  captureMessage(message, \"warning\");\n};\n\n/**\n * Start performance monitoring span\n * Returns a function to call when the operation is complete\n */\nexport const startSpan = (\n  name: string,\n  op: string,\n  data?: Record<string, any>\n): (() => void) => {\n  // Skip in production environments where we've disabled performance monitoring for speed\n  if (process.env.NODE_ENV === \"production\") {\n    // Return empty function as noop\n    return () => {};\n  }\n\n  try {\n    // Create unique ID for this operation\n    const spanId = `${op}-${name}-${Date.now()}`;\n    const startTime = performance.now();\n\n    // Add breadcrumb for operation start\n    const safeData = data\n      ? Object.fromEntries(\n          Object.entries(data).map(([key, value]) => [\n            key,\n            safeStringify(value),\n          ])\n        )\n      : undefined;\n\n    // Safely add breadcrumb with error handling\n    try {\n      addBreadcrumb(`Started ${op}: ${name}`, \"performance\", \"info\", {\n        ...safeData,\n        spanId,\n      });\n    } catch (e) {\n      // Silently fail breadcrumb to not affect performance\n      console.warn(\"Failed to add breadcrumb:\", e);\n    }\n\n    // Return a function to finish the span\n    return () => {\n      try {\n        const endTime = performance.now();\n        const duration = Math.round(endTime - startTime);\n\n        // Only track operations that took significant time (> 50ms)\n        if (duration > 50) {\n          try {\n            addBreadcrumb(\n              `Finished ${op}: ${name} (${duration}ms)`,\n              \"performance\",\n              duration > 500 ? \"warning\" : \"info\", // Mark slow operations as warnings\n              {\n                ...safeData,\n                duration,\n                spanId,\n              }\n            );\n\n            // For very slow operations (>1s), send a performance issue\n            if (duration > 1000) {\n              captureMessage(\n                `Slow operation: ${op} - ${name} took ${duration}ms`,\n                \"warning\",\n                {\n                  performance: true,\n                  duration,\n                  operation: op,\n                  ...safeData,\n                }\n              );\n            }\n          } catch (e) {\n            // Silently fail to not affect performance\n            console.warn(\"Failed to record performance data:\", e);\n          }\n        }\n      } catch (e) {\n        // Silently fail to not affect performance\n        console.warn(\"Failed to finish performance span:\", e);\n      }\n    };\n  } catch (e) {\n    // Return a no-op function if anything fails\n    console.warn(\"Failed to start performance tracking:\", e);\n    return () => {};\n  }\n};\n\n/**\n * Set extra data on the current scope\n */\nexport const setExtra = (key: string, value: any): void => {\n  Sentry.setExtra(key, safeStringify(value));\n};\n","module.exports = require(\"crypto\");","module.exports = require(\"https\");","module.exports = require(\"tls\");","module.exports = require(\"node:stream\");","module.exports = require(\"node:util\");","module.exports = require(\"next/dist/server/app-render/work-unit-async-storage.external.js\");","module.exports = require(\"node:fs\");","module.exports = require(\"worker_threads\");","module.exports = require(\"zlib\");","module.exports = require(\"perf_hooks\");","module.exports = require(\"node:worker_threads\");","module.exports = require(\"node:path\");","module.exports = require(\"node:net\");","module.exports = require(\"buffer\");","module.exports = require(\"url\");","module.exports = require(\"child_process\");","module.exports = require(\"node:readline\");","module.exports = require(\"http\");","module.exports = require(\"tty\");","module.exports = require(\"async_hooks\");","module.exports = require(\"node:inspector\");","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 87558;\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 91093;\nmodule.exports = webpackEmptyContext;","module.exports = require(\"net\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"createDedupedByCallsiteServerErrorLoggerDev\", {\n    enumerable: true,\n    get: function() {\n        return createDedupedByCallsiteServerErrorLoggerDev;\n    }\n});\nconst _react = /*#__PURE__*/ _interop_require_wildcard(require(\"react\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {\n        __proto__: null\n    };\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nconst errorRef = {\n    current: null\n};\n// React.cache is currently only available in canary/experimental React channels.\nconst cache = typeof _react.cache === 'function' ? _react.cache : (fn)=>fn;\n// When Dynamic IO is enabled, we record these as errors so that they\n// are captured by the dev overlay as it's more critical to fix these\n// when enabled.\nconst logErrorOrWarn = process.env.__NEXT_DYNAMIC_IO ? console.error : console.warn;\n// We don't want to dedupe across requests.\n// The developer might've just attempted to fix the warning so we should warn again if it still happens.\nconst flushCurrentErrorIfNew = cache(// eslint-disable-next-line @typescript-eslint/no-unused-vars -- cache key\n(key)=>{\n    try {\n        logErrorOrWarn(errorRef.current);\n    } finally{\n        errorRef.current = null;\n    }\n});\nfunction createDedupedByCallsiteServerErrorLoggerDev(getMessage) {\n    return function logDedupedError(...args) {\n        const message = getMessage(...args);\n        if (process.env.NODE_ENV !== 'production') {\n            var _stack;\n            const callStackFrames = (_stack = new Error().stack) == null ? void 0 : _stack.split('\\n');\n            if (callStackFrames === undefined || callStackFrames.length < 4) {\n                logErrorOrWarn(message);\n            } else {\n                // Error:\n                //   logDedupedError\n                //   asyncApiBeingAccessedSynchronously\n                //   <userland callsite>\n                // TODO: This breaks if sourcemaps with ignore lists are enabled.\n                const key = callStackFrames[4];\n                errorRef.current = message;\n                flushCurrentErrorIfNew(key);\n            }\n        } else {\n            logErrorOrWarn(message);\n        }\n    };\n}\n\n//# sourceMappingURL=create-deduped-by-callsite-server-error-logger.js.map","module.exports = require(\"events\");"],"names":["createClient","cookieStore","cookies","createServerClient","process","getAll","setAll","cookiesToSet","forEach","name","value","options","set","auth","autoRefreshToken","persistSession","detectSessionInUrl","POST","req","supabase","comment_id","json","user","getUser","data","logWarning","NextResponse","error","status","userId","id","from","insert","user_id","logError","message","DELETE","delete","match","serverComponentModule.GET","serverComponentModule.PUT","serverComponentModule.PATCH","serverComponentModule.DELETE","serverComponentModule.HEAD","serverComponentModule.OPTIONS","messageCache","safeStringify","undefined","substring","MAX_OBJECT_SIZE","str","JSON","stringify","length","e","cleanThrottleCache","now","Date","keys","Object","MAX_CACHE_SIZE","map","key","timestamp","time","sort","a","b","slice","item","MIN_THROTTLE_MS","isThrottled","cacheKey","count","captureException","context","errorMessage","Error","String","throttleKey","safeContext","fromEntries","entries","Sentry","extra","captureMessage","level","safeMessage","op"],"sourceRoot":""}