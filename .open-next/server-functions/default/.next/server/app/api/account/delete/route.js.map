{"version":3,"file":"../app/api/account/delete/route.js","mappings":"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","sources":["webpack://unreal/external commonjs \"next/dist/server/app-render/after-task-async-storage.external.js\"","webpack://unreal/external commonjs2 \"module\"","webpack://unreal/external commonjs \"next/dist/compiled/next-server/app-page.runtime.prod.js\"","webpack://unreal/external commonjs2 \"punycode\"","webpack://unreal/external commonjs2 \"process\"","webpack://unreal/external commonjs2 \"os\"","webpack://unreal/external commonjs2 \"stream\"","webpack://unreal/external commonjs2 \"util\"","webpack://unreal/external commonjs2 \"fs\"","webpack://unreal/external commonjs \"next/dist/server/app-render/work-async-storage.external.js\"","webpack://unreal/external node-commonjs \"node:child_process\"","webpack://unreal/external commonjs2 \"path\"","webpack://unreal/external commonjs2 \"diagnostics_channel\"","webpack://unreal/external node-commonjs \"node:http\"","webpack://unreal/external node-commonjs \"node:zlib\"","webpack://unreal/external node-commonjs \"node:tls\"","webpack://unreal/external node-commonjs \"node:https\"","webpack://unreal/external commonjs \"next/dist/compiled/next-server/app-route.runtime.prod.js\"","webpack://unreal/external node-commonjs \"node:os\"","webpack://unreal/external node-commonjs \"node:diagnostics_channel\"","webpack://unreal/./src/utils/sentryUtils.ts","webpack://unreal/external commonjs2 \"crypto\"","webpack://unreal/external commonjs2 \"https\"","webpack://unreal/external commonjs2 \"tls\"","webpack://unreal/external node-commonjs \"node:stream\"","webpack://unreal/external node-commonjs \"node:util\"","webpack://unreal/external commonjs \"next/dist/server/app-render/work-unit-async-storage.external.js\"","webpack://unreal/","webpack://unreal/external node-commonjs \"node:fs\"","webpack://unreal/external commonjs2 \"worker_threads\"","webpack://unreal/external commonjs2 \"zlib\"","webpack://unreal/src/app/api/account/delete/route.ts","webpack://unreal/sentry-wrapper-module","webpack://unreal/?1857","webpack://unreal/external commonjs2 \"perf_hooks\"","webpack://unreal/external node-commonjs \"node:worker_threads\"","webpack://unreal/external node-commonjs \"node:path\"","webpack://unreal/external node-commonjs \"node:net\"","webpack://unreal/external commonjs2 \"buffer\"","webpack://unreal/external commonjs2 \"url\"","webpack://unreal/external commonjs2 \"child_process\"","webpack://unreal/external node-commonjs \"node:readline\"","webpack://unreal/external commonjs2 \"http\"","webpack://unreal/external commonjs2 \"tty\"","webpack://unreal/external commonjs2 \"async_hooks\"","webpack://unreal/external node-commonjs \"node:inspector\"","webpack://unreal/./node_modules/.pnpm/@opentelemetry+instrumentation@0.57.2_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/ sync","webpack://unreal/?4e0c","webpack://unreal/./node_modules/.pnpm/require-in-the-middle@7.5.2/node_modules/require-in-the-middle/ sync","webpack://unreal/external commonjs2 \"net\"","webpack://unreal/external commonjs2 \"events\""],"sourcesContent":["module.exports = require(\"next/dist/server/app-render/after-task-async-storage.external.js\");","module.exports = require(\"module\");","module.exports = require(\"next/dist/compiled/next-server/app-page.runtime.prod.js\");","module.exports = require(\"punycode\");","module.exports = require(\"process\");","module.exports = require(\"os\");","module.exports = require(\"stream\");","module.exports = require(\"util\");","module.exports = require(\"fs\");","module.exports = require(\"next/dist/server/app-render/work-async-storage.external.js\");","module.exports = require(\"node:child_process\");","module.exports = require(\"path\");","module.exports = require(\"diagnostics_channel\");","module.exports = require(\"node:http\");","module.exports = require(\"node:zlib\");","module.exports = require(\"node:tls\");","module.exports = require(\"node:https\");","module.exports = require(\"next/dist/compiled/next-server/app-route.runtime.prod.js\");","module.exports = require(\"node:os\");","module.exports = require(\"node:diagnostics_channel\");","import * as Sentry from \"@sentry/nextjs\";\n\n// Track throttled messages to avoid duplicates\ninterface ThrottleCache {\n  [key: string]: {\n    timestamp: number;\n    count: number;\n  };\n}\n\n// Cache for throttling\nconst messageCache: ThrottleCache = {};\nconst MIN_THROTTLE_MS = 5000; // 5 seconds between identical messages\nconst MAX_CACHE_SIZE = 100;\nconst MAX_OBJECT_SIZE = 5000; // Characters limit for stringified objects\n\n/**\n * Safely stringify data, with size limits to prevent performance issues\n */\nconst safeStringify = (data: any): string => {\n  if (data === undefined || data === null) return \"\";\n  if (typeof data === \"string\") return data.substring(0, MAX_OBJECT_SIZE);\n\n  try {\n    const str = JSON.stringify(data);\n    return str.length > MAX_OBJECT_SIZE\n      ? str.substring(0, MAX_OBJECT_SIZE) + \"...[truncated]\"\n      : str;\n  } catch (e) {\n    return \"[Object cannot be serialized]\";\n  }\n};\n\n/**\n * Clean the throttle cache periodically\n */\nconst cleanThrottleCache = (): void => {\n  const now = Date.now();\n  const keys = Object.keys(messageCache);\n\n  if (keys.length > MAX_CACHE_SIZE) {\n    // Remove oldest entries if cache is too large\n    const oldestKeys = keys\n      .map((key) => {\n        // Add safety check for undefined entries\n        if (\n          !messageCache[key] ||\n          typeof messageCache[key].timestamp !== \"number\"\n        ) {\n          return { key, time: 0 };\n        }\n        return { key, time: messageCache[key].timestamp };\n      })\n      .sort((a, b) => a.time - b.time)\n      .slice(0, keys.length - MAX_CACHE_SIZE / 2)\n      .map((item) => item.key);\n\n    oldestKeys.forEach((key) => delete messageCache[key]);\n  }\n\n  // Remove expired entries\n  keys.forEach((key) => {\n    // Add safety check for undefined entries\n    if (\n      messageCache[key] &&\n      typeof messageCache[key].timestamp === \"number\" &&\n      now - messageCache[key].timestamp > MIN_THROTTLE_MS * 10\n    ) {\n      delete messageCache[key];\n    } else if (\n      !messageCache[key] ||\n      typeof messageCache[key].timestamp !== \"number\"\n    ) {\n      // Remove invalid entries that could cause errors\n      delete messageCache[key];\n    }\n  });\n};\n\n// Clean cache every minute\nif (typeof window !== \"undefined\") {\n  setInterval(cleanThrottleCache, 60000);\n}\n\n/**\n * Check if a message is throttled\n * Returns true if the message should be skipped\n */\nconst isThrottled = (cacheKey: string): boolean => {\n  const now = Date.now();\n\n  if (messageCache[cacheKey]) {\n    const { timestamp, count } = messageCache[cacheKey];\n    const elapsed = now - timestamp;\n\n    if (elapsed < MIN_THROTTLE_MS) {\n      // Update count but don't send\n      messageCache[cacheKey].count++;\n      return true;\n    }\n\n    // Update timestamp and count\n    messageCache[cacheKey].timestamp = now;\n    messageCache[cacheKey].count++;\n  } else {\n    // First occurrence\n    messageCache[cacheKey] = { timestamp: now, count: 1 };\n\n    // Clean cache if it gets too large\n    if (Object.keys(messageCache).length > MAX_CACHE_SIZE) {\n      cleanThrottleCache();\n    }\n  }\n\n  return false;\n};\n\n/**\n * Log an error to Sentry with additional context\n */\nexport const captureException = (\n  error: Error | unknown,\n  context?: Record<string, any>\n): void => {\n  // Skip in development for better performance, just log to console\n  if (process.env.NODE_ENV === \"development\") {\n    console.error(error, context);\n    return;\n  }\n\n  // Create a throttle key based on error message\n  const errorMessage = error instanceof Error ? error.message : String(error);\n  const throttleKey = `error:${errorMessage.substring(0, 100)}`;\n\n  if (isThrottled(throttleKey)) return;\n\n  // Limit context size to prevent performance issues\n  const safeContext = context\n    ? Object.fromEntries(\n        Object.entries(context).map(([key, value]) => [\n          key,\n          safeStringify(value),\n        ])\n      )\n    : undefined;\n\n  if (error instanceof Error) {\n    Sentry.captureException(error, {\n      extra: safeContext,\n    });\n  } else {\n    Sentry.captureException(new Error(String(error)), {\n      extra: safeContext,\n    });\n  }\n};\n\n/**\n * Log a message to Sentry at the specified level\n */\nexport const captureMessage = (\n  message: string,\n  level: Sentry.SeverityLevel = \"info\",\n  context?: Record<string, any>\n): void => {\n  // Skip low-priority messages in production\n  if (process.env.NODE_ENV === \"production\" && level === \"info\") {\n    return;\n  }\n\n  // Limit message size\n  const safeMessage = message.substring(0, 200);\n\n  // Create throttle key based on message\n  const throttleKey = `${level}:${safeMessage}`;\n\n  if (isThrottled(throttleKey)) return;\n\n  // Limit context size\n  const safeContext = context\n    ? Object.fromEntries(\n        Object.entries(context).map(([key, value]) => [\n          key,\n          safeStringify(value),\n        ])\n      )\n    : undefined;\n\n  Sentry.captureMessage(safeMessage, {\n    level,\n    extra: safeContext,\n  });\n};\n\n/**\n * Set the current user for Sentry tracking\n */\nexport const setUser = (\n  id: string | null,\n  email?: string,\n  username?: string,\n  additionalData?: Record<string, any>\n): void => {\n  if (id) {\n    Sentry.setUser({\n      id,\n      email,\n      username,\n      ...additionalData,\n    });\n  } else {\n    // Clear user data when id is null\n    Sentry.setUser(null);\n  }\n};\n\n/**\n * Add breadcrumb to track user or system actions\n */\nexport const addBreadcrumb = (\n  message: string,\n  category?: string,\n  level: Sentry.SeverityLevel = \"info\",\n  data?: Record<string, any>\n): void => {\n  // Skip breadcrumbs in production for better performance\n  if (process.env.NODE_ENV === \"production\" && level === \"info\") {\n    return;\n  }\n\n  // Limit data size\n  const safeData = data\n    ? Object.fromEntries(\n        Object.entries(data).map(([key, value]) => [key, safeStringify(value)])\n      )\n    : undefined;\n\n  Sentry.addBreadcrumb({\n    message: message.substring(0, 100),\n    category,\n    level,\n    data: safeData,\n  });\n};\n\n/**\n * Set context information for current scope\n */\nexport const setContext = (\n  name: string,\n  context: Record<string, any>\n): void => {\n  // Limit context size\n  const safeContext = Object.fromEntries(\n    Object.entries(context).map(([key, value]) => [key, safeStringify(value)])\n  );\n\n  Sentry.setContext(name, safeContext);\n};\n\n/**\n * Replace console.log in production\n * In development, it will only log to console\n * In production, it will send to Sentry as warning-level message only if important\n */\nexport const log = (message: string, data?: any): void => {\n  const isDev = process.env.NODE_ENV === \"development\";\n\n  if (isDev) {\n    console.log(message, data);\n    return;\n  }\n\n  // In production, only log critical info\n  // Most info logs can be skipped entirely\n  if (\n    message.includes(\"error\") ||\n    message.includes(\"fail\") ||\n    message.includes(\"critical\")\n  ) {\n    captureMessage(`${message}`, \"warning\");\n  }\n};\n\n/**\n * Replace console.error in production\n * Always captures as error in Sentry, only logs to console in development\n */\nexport const logError = (message: string, error?: Error | unknown): void => {\n  const isDev = process.env.NODE_ENV === \"development\";\n\n  if (isDev) {\n    console.error(message, error);\n    return;\n  }\n\n  // Create throttle key for this error\n  const errorMessage = error instanceof Error ? error.message : String(error);\n  const throttleKey = `error:${message}:${errorMessage.substring(0, 50)}`;\n\n  if (isThrottled(throttleKey)) return;\n\n  if (error) {\n    captureException(error, { message });\n  } else {\n    captureMessage(message, \"error\");\n  }\n};\n\n/**\n * Replace console.warn in production\n * Captures as warning in Sentry, only logs to console in development\n */\nexport const logWarning = (message: string, data?: any): void => {\n  const isDev = process.env.NODE_ENV === \"development\";\n\n  if (isDev) {\n    console.warn(message, data);\n    return;\n  }\n\n  // Create throttle key for this warning\n  const throttleKey = `warning:${message}`;\n\n  if (isThrottled(throttleKey)) return;\n\n  captureMessage(message, \"warning\");\n};\n\n/**\n * Start performance monitoring span\n * Returns a function to call when the operation is complete\n */\nexport const startSpan = (\n  name: string,\n  op: string,\n  data?: Record<string, any>\n): (() => void) => {\n  // Skip in production environments where we've disabled performance monitoring for speed\n  if (process.env.NODE_ENV === \"production\") {\n    // Return empty function as noop\n    return () => {};\n  }\n\n  try {\n    // Create unique ID for this operation\n    const spanId = `${op}-${name}-${Date.now()}`;\n    const startTime = performance.now();\n\n    // Add breadcrumb for operation start\n    const safeData = data\n      ? Object.fromEntries(\n          Object.entries(data).map(([key, value]) => [\n            key,\n            safeStringify(value),\n          ])\n        )\n      : undefined;\n\n    // Safely add breadcrumb with error handling\n    try {\n      addBreadcrumb(`Started ${op}: ${name}`, \"performance\", \"info\", {\n        ...safeData,\n        spanId,\n      });\n    } catch (e) {\n      // Silently fail breadcrumb to not affect performance\n      console.warn(\"Failed to add breadcrumb:\", e);\n    }\n\n    // Return a function to finish the span\n    return () => {\n      try {\n        const endTime = performance.now();\n        const duration = Math.round(endTime - startTime);\n\n        // Only track operations that took significant time (> 50ms)\n        if (duration > 50) {\n          try {\n            addBreadcrumb(\n              `Finished ${op}: ${name} (${duration}ms)`,\n              \"performance\",\n              duration > 500 ? \"warning\" : \"info\", // Mark slow operations as warnings\n              {\n                ...safeData,\n                duration,\n                spanId,\n              }\n            );\n\n            // For very slow operations (>1s), send a performance issue\n            if (duration > 1000) {\n              captureMessage(\n                `Slow operation: ${op} - ${name} took ${duration}ms`,\n                \"warning\",\n                {\n                  performance: true,\n                  duration,\n                  operation: op,\n                  ...safeData,\n                }\n              );\n            }\n          } catch (e) {\n            // Silently fail to not affect performance\n            console.warn(\"Failed to record performance data:\", e);\n          }\n        }\n      } catch (e) {\n        // Silently fail to not affect performance\n        console.warn(\"Failed to finish performance span:\", e);\n      }\n    };\n  } catch (e) {\n    // Return a no-op function if anything fails\n    console.warn(\"Failed to start performance tracking:\", e);\n    return () => {};\n  }\n};\n\n/**\n * Set extra data on the current scope\n */\nexport const setExtra = (key: string, value: any): void => {\n  Sentry.setExtra(key, safeStringify(value));\n};\n","module.exports = require(\"crypto\");","module.exports = require(\"https\");","module.exports = require(\"tls\");","module.exports = require(\"node:stream\");","module.exports = require(\"node:util\");","module.exports = require(\"next/dist/server/app-render/work-unit-async-storage.external.js\");",null,"module.exports = require(\"node:fs\");","module.exports = require(\"worker_threads\");","module.exports = require(\"zlib\");","import { createClient } from \"@supabase/supabase-js\";\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { logError } from \"@/utils/sentryUtils\";\n\nconst supabaseAdmin = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL || \"\",\n  process.env.SUPABASE_SERVICE_ROLE_KEY || \"\" // Service role key (used ONLY in backend)\n);\n\nexport async function DELETE(req: Request) {\n  try {\n    const { userId, token } = await req.json();\n\n    if (!userId || !token) {\n      logError(\"Account deletion missing required fields\", { userId });\n      return NextResponse.json(\n        { error: \"User ID and token are required\" },\n        { status: 400 }\n      );\n    }\n\n    // Ensure token belongs to user\n    const supabaseAuthClient = createClient(\n      process.env.NEXT_PUBLIC_SUPABASE_URL || \"\",\n      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || \"\",\n      { global: { headers: { Authorization: `Bearer ${token}` } } }\n    );\n\n    const { data: user, error: authError } =\n      await supabaseAuthClient.auth.getUser();\n\n    if (authError || user?.user?.id !== userId) {\n      logError(\"Unauthorized account deletion attempt\", {\n        userId,\n        authError,\n        authenticatedUserId: user?.user?.id,\n      });\n      return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\n    }\n\n    // Delete user-related data from your database (optional)\n    await supabaseAdmin.from(\"comments\").delete().eq(\"user_id\", userId);\n    await supabaseAdmin.from(\"comment_likes\").delete().eq(\"user_id\", userId);\n    await supabaseAdmin.from(\"follows\").delete().eq(\"follower_id\", userId);\n    await supabaseAdmin.from(\"follows\").delete().eq(\"followee_id\", userId);\n    await supabaseAdmin.from(\"likes\").delete().eq(\"author\", userId);\n    await supabaseAdmin.from(\"likes\").delete().eq(\"post_author\", userId);\n    await supabaseAdmin.from(\"notifications\").delete().eq(\"sender_id\", userId);\n    await supabaseAdmin.from(\"notifications\").delete().eq(\"user_id\", userId);\n    await supabaseAdmin.from(\"post_pins\").delete().eq(\"user_id\", userId);\n    await supabaseAdmin.from(\"posts\").delete().eq(\"author\", userId);\n    await supabaseAdmin.from(\"posts_with_rank\").delete().eq(\"author\", userId);\n    await supabaseAdmin.from(\"profiles\").delete().eq(\"id\", userId);\n\n    // Delete the user from Supabase Auth\n    const { error: deleteError } = await supabaseAdmin.auth.admin.deleteUser(\n      userId\n    );\n\n    if (deleteError) {\n      logError(\"Error deleting user from Supabase Auth\", deleteError);\n      throw deleteError;\n    }\n\n    return NextResponse.json(\n      { message: \"User deleted successfully\" },\n      { status: 200 }\n    );\n  } catch (error: any) {\n    logError(\"Account deletion failed\", error);\n    return NextResponse.json({ error: error.message }, { status: 500 });\n  }\n}\n","import * as Sentry from '@sentry/nextjs';\nimport * as origModule from 'next/dist/server/app-render/work-unit-async-storage.external.js';\nimport * as serverComponentModule from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport * from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport {} from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\n\nconst asyncStorageModule = { ...origModule } ;\n\nconst requestAsyncStorage =\n  'workUnitAsyncStorage' in asyncStorageModule\n    ? asyncStorageModule.workUnitAsyncStorage\n    : 'requestAsyncStorage' in asyncStorageModule\n      ? asyncStorageModule.requestAsyncStorage\n      : undefined;\n\nfunction wrapHandler(handler, method) {\n  // Running the instrumentation code during the build phase will mark any function as \"dynamic\" because we're accessing\n  // the Request object. We do not want to turn handlers dynamic so we skip instrumentation in the build phase.\n  if (process.env.NEXT_PHASE === 'phase-production-build') {\n    return handler;\n  }\n\n  if (typeof handler !== 'function') {\n    return handler;\n  }\n\n  return new Proxy(handler, {\n    apply: (originalFunction, thisArg, args) => {\n      let headers = undefined;\n\n      // We try-catch here just in case the API around `requestAsyncStorage` changes unexpectedly since it is not public API\n      try {\n        const requestAsyncStore = requestAsyncStorage?.getStore() ;\n        headers = requestAsyncStore?.headers;\n      } catch (e) {\n        /** empty */\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return Sentry.wrapRouteHandlerWithSentry(originalFunction , {\n        method,\n        parameterizedRoute: '/api/account/delete',\n        headers,\n      }).apply(thisArg, args);\n    },\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst GET = wrapHandler(serverComponentModule.GET , 'GET');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst POST = wrapHandler(serverComponentModule.POST , 'POST');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PUT = wrapHandler(serverComponentModule.PUT , 'PUT');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PATCH = wrapHandler(serverComponentModule.PATCH , 'PATCH');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst DELETE = wrapHandler(serverComponentModule.DELETE , 'DELETE');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst HEAD = wrapHandler(serverComponentModule.HEAD , 'HEAD');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst OPTIONS = wrapHandler(serverComponentModule.OPTIONS , 'OPTIONS');\n\nexport { DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT };\n","import { AppRouteRouteModule } from \"next/dist/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/Users/a0000/projects/unreal/src/app/api/account/delete/route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/account/delete/route\",\n        pathname: \"/api/account/delete\",\n        filename: \"route\",\n        bundlePath: \"app/api/account/delete/route\"\n    },\n    resolvedPagePath: \"/Users/a0000/projects/unreal/src/app/api/account/delete/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","module.exports = require(\"perf_hooks\");","module.exports = require(\"node:worker_threads\");","module.exports = require(\"node:path\");","module.exports = require(\"node:net\");","module.exports = require(\"buffer\");","module.exports = require(\"url\");","module.exports = require(\"child_process\");","module.exports = require(\"node:readline\");","module.exports = require(\"http\");","module.exports = require(\"tty\");","module.exports = require(\"async_hooks\");","module.exports = require(\"node:inspector\");","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 87558;\nmodule.exports = webpackEmptyContext;",null,"function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 91093;\nmodule.exports = webpackEmptyContext;","module.exports = require(\"net\");","module.exports = require(\"events\");"],"names":["messageCache","safeStringify","data","undefined","substring","MAX_OBJECT_SIZE","str","JSON","stringify","length","e","cleanThrottleCache","now","Date","keys","Object","MAX_CACHE_SIZE","oldestKeys","map","key","timestamp","time","sort","a","b","slice","item","forEach","MIN_THROTTLE_MS","isThrottled","cacheKey","count","elapsed","captureException","error","context","errorMessage","Error","message","String","throttleKey","safeContext","fromEntries","entries","value","Sentry","extra","level","process","safeMessage","captureMessage","name","op","supabaseAdmin","createClient","env","SUPABASE_SERVICE_ROLE_KEY","DELETE","req","userId","token","json","logError","NextResponse","status","supabaseAuthClient","global","headers","Authorization","user","authError","auth","getUser","id","authenticatedUserId","from","delete","eq","deleteError","admin","serverComponentModule.GET","serverComponentModule.POST","serverComponentModule.PUT","serverComponentModule.PATCH","serverComponentModule.DELETE","serverComponentModule.HEAD","serverComponentModule.OPTIONS"],"sourceRoot":""}