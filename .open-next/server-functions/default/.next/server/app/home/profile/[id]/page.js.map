{"version":3,"file":"../app/home/profile/[id]/page.js","mappings":"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","sources":["webpack://unreal/external commonjs \"next/dist/server/app-render/after-task-async-storage.external.js\"","webpack://unreal/?6170","webpack://unreal/external commonjs2 \"module\"","webpack://unreal/external commonjs \"next/dist/compiled/next-server/app-page.runtime.prod.js\"","webpack://unreal/external commonjs2 \"punycode\"","webpack://unreal/external commonjs2 \"assert\"","webpack://unreal/?09ab","webpack://unreal/external commonjs \"next/dist/server/app-render/action-async-storage.external.js\"","webpack://unreal/external commonjs2 \"process\"","webpack://unreal/?dfed","webpack://unreal/external commonjs2 \"os\"","webpack://unreal/external commonjs2 \"stream\"","webpack://unreal/external commonjs2 \"util\"","webpack://unreal/external commonjs2 \"fs\"","webpack://unreal/external commonjs \"next/dist/server/app-render/work-async-storage.external.js\"","webpack://unreal/external node-commonjs \"node:child_process\"","webpack://unreal/external commonjs2 \"path\"","webpack://unreal/external commonjs2 \"diagnostics_channel\"","webpack://unreal/external node-commonjs \"node:http\"","webpack://unreal/external node-commonjs \"node:zlib\"","webpack://unreal/external commonjs2 \"string_decoder\"","webpack://unreal/./src/queries/user/getFollowerStat.ts","webpack://unreal/./src/hooks/useFollowStats.tsx","webpack://unreal/external node-commonjs \"node:tls\"","webpack://unreal/external node-commonjs \"node:https\"","webpack://unreal/external node-commonjs \"node:os\"","webpack://unreal/external node-commonjs \"node:diagnostics_channel\"","webpack://unreal/external commonjs2 \"crypto\"","webpack://unreal/external commonjs2 \"https\"","webpack://unreal/external commonjs2 \"tls\"","webpack://unreal/external node-commonjs \"node:stream\"","webpack://unreal/external node-commonjs \"node:util\"","webpack://unreal/./src/queries/user/getUserById.ts","webpack://unreal/src/app/home/profile/[id]/page.tsx","webpack://unreal/sentry-wrapper-module","webpack://unreal/external commonjs \"next/dist/server/app-render/work-unit-async-storage.external.js\"","webpack://unreal/./src/app/home/profile/components/profileView.tsx","webpack://unreal/./src/hooks/useUserData.tsx","webpack://unreal/./src/app/home/profile/components/profileSkeleton.tsx","webpack://unreal/./src/app/home/profile/components/modals/editModal.tsx","webpack://unreal/./src/hooks/useDeleteAccount.ts","webpack://unreal/./src/app/home/profile/components/modals/deleteModal.tsx","webpack://unreal/./src/hooks/useUpdateUserDetails.tsx","webpack://unreal/./src/app/home/profile/components/modals/editProfileModal.tsx","webpack://unreal/./src/app/home/profile/components/userData.tsx","webpack://unreal/external node-commonjs \"node:fs\"","webpack://unreal/external commonjs2 \"worker_threads\"","webpack://unreal/external commonjs2 \"zlib\"","webpack://unreal/external commonjs2 \"perf_hooks\"","webpack://unreal/external node-commonjs \"node:worker_threads\"","webpack://unreal/external node-commonjs \"node:path\"","webpack://unreal/external node-commonjs \"node:net\"","webpack://unreal/external node-commonjs \"node:crypto\"","webpack://unreal/external commonjs2 \"buffer\"","webpack://unreal/external commonjs2 \"url\"","webpack://unreal/external commonjs2 \"child_process\"","webpack://unreal/external node-commonjs \"node:readline\"","webpack://unreal/external commonjs2 \"http\"","webpack://unreal/./src/queries/user/getLikeStat.ts","webpack://unreal/./src/hooks/useLikeStat.tsx","webpack://unreal/external commonjs2 \"tty\"","webpack://unreal/external commonjs2 \"async_hooks\"","webpack://unreal/external node-commonjs \"node:inspector\"","webpack://unreal/external commonjs2 \"net\"","webpack://unreal/./src/app/home/profile/components/profileInfo.tsx","webpack://unreal/external commonjs2 \"events\""],"sourcesContent":["module.exports = require(\"next/dist/server/app-render/after-task-async-storage.external.js\");","import(/* webpackMode: \"eager\", webpackExports: [\"HydrationBoundary\"] */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/HydrationBoundary.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"IsRestoringProvider\",\"useIsRestoring\"] */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/isRestoring.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"QueryErrorResetBoundary\",\"useQueryErrorResetBoundary\"] */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"useInfiniteQuery\"] */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/useInfiniteQuery.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"useIsFetching\"] */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/useIsFetching.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"useMutation\"] */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/useMutation.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"useIsMutating\",\"useMutationState\"] */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/useMutationState.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"useQueries\"] */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/useQueries.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"useQuery\"] */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/useQuery.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"useSuspenseInfiniteQuery\"] */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/useSuspenseInfiniteQuery.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"useSuspenseQueries\"] */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/useSuspenseQueries.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"useSuspenseQuery\"] */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/useSuspenseQuery.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"default\"] */ \"/Users/a0000/projects/unreal/src/app/home/profile/components/profileView.tsx\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"default\"] */ \"/Users/a0000/projects/unreal/src/app/home/profile/components/userData.tsx\");\n","module.exports = require(\"module\");","module.exports = require(\"next/dist/compiled/next-server/app-page.runtime.prod.js\");","module.exports = require(\"punycode\");","module.exports = require(\"assert\");","import(/* webpackMode: \"eager\", webpackExports: [\"HydrationBoundary\"] */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/HydrationBoundary.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"IsRestoringProvider\",\"useIsRestoring\"] */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/isRestoring.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"QueryErrorResetBoundary\",\"useQueryErrorResetBoundary\"] */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"useInfiniteQuery\"] */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/useInfiniteQuery.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"useIsFetching\"] */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/useIsFetching.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"useMutation\"] */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/useMutation.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"useIsMutating\",\"useMutationState\"] */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/useMutationState.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"useQueries\"] */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/useQueries.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"useQuery\"] */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/useQuery.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"useSuspenseInfiniteQuery\"] */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/useSuspenseInfiniteQuery.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"useSuspenseQueries\"] */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/useSuspenseQueries.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"useSuspenseQuery\"] */ \"/Users/a0000/projects/unreal/node_modules/.pnpm/@tanstack+react-query@5.69.0_react@19.0.0/node_modules/@tanstack/react-query/build/modern/useSuspenseQuery.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"default\"] */ \"/Users/a0000/projects/unreal/src/app/home/profile/components/profileView.tsx\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"default\"] */ \"/Users/a0000/projects/unreal/src/app/home/profile/components/userData.tsx\");\n","module.exports = require(\"next/dist/server/app-render/action-async-storage.external.js\");","module.exports = require(\"process\");","const module0 = () => import(/* webpackMode: \"eager\" */ \"/Users/a0000/projects/unreal/src/app/layout.tsx\");\nconst module1 = () => import(/* webpackMode: \"eager\" */ \"/Users/a0000/projects/unreal/src/app/global-error.tsx\");\nconst module2 = () => import(/* webpackMode: \"eager\" */ \"/Users/a0000/projects/unreal/src/app/not-found.tsx\");\nconst module3 = () => import(/* webpackMode: \"eager\" */ \"next/dist/client/components/forbidden-error\");\nconst module4 = () => import(/* webpackMode: \"eager\" */ \"next/dist/client/components/unauthorized-error\");\nconst module5 = () => import(/* webpackMode: \"eager\" */ \"/Users/a0000/projects/unreal/src/app/home/layout.tsx\");\nconst module6 = () => import(/* webpackMode: \"eager\" */ \"/Users/a0000/projects/unreal/src/app/home/loading.tsx\");\nconst page7 = () => import(/* webpackMode: \"eager\" */ \"/Users/a0000/projects/unreal/src/app/home/profile/[id]/page.tsx\");\nimport { AppPageRouteModule } from \"next/dist/server/route-modules/app-page/module.compiled\" with {\n    'turbopack-transition': 'next-ssr'\n};\nimport { RouteKind } from \"next/dist/server/route-kind\" with {\n    'turbopack-transition': 'next-server-utility'\n};\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n        children: [\n        'home',\n        {\n        children: [\n        'profile',\n        {\n        children: [\n        '[id]',\n        {\n        children: ['__PAGE__', {}, {\n          page: [page7, \"/Users/a0000/projects/unreal/src/app/home/profile/[id]/page.tsx\"],\n          \n        }]\n      },\n        {\n        \n        \n      }\n      ]\n      },\n        {\n        \n        \n      }\n      ]\n      },\n        {\n        'layout': [module5, \"/Users/a0000/projects/unreal/src/app/home/layout.tsx\"],\n'loading': [module6, \"/Users/a0000/projects/unreal/src/app/home/loading.tsx\"],\n        metadata: {\n    icon: [(async (props) => (await import(/* webpackMode: \"eager\" */ \"next-metadata-image-loader?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&pageExtensions=mdx!/Users/a0000/projects/unreal/src/app/favicon.ico?__next_metadata__\")).default(props))],\n    apple: [],\n    openGraph: [],\n    twitter: [],\n    manifest: \"/manifest.webmanifest\"\n  }\n      }\n      ]\n      },\n        {\n        'layout': [module0, \"/Users/a0000/projects/unreal/src/app/layout.tsx\"],\n'global-error': [module1, \"/Users/a0000/projects/unreal/src/app/global-error.tsx\"],\n'not-found': [module2, \"/Users/a0000/projects/unreal/src/app/not-found.tsx\"],\n'forbidden': [module3, \"next/dist/client/components/forbidden-error\"],\n'unauthorized': [module4, \"next/dist/client/components/unauthorized-error\"],\n        metadata: {\n    icon: [(async (props) => (await import(/* webpackMode: \"eager\" */ \"next-metadata-image-loader?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&pageExtensions=mdx!/Users/a0000/projects/unreal/src/app/favicon.ico?__next_metadata__\")).default(props))],\n    apple: [],\n    openGraph: [],\n    twitter: [],\n    manifest: \"/manifest.webmanifest\"\n  }\n      }\n      ]\n      }.children;\nconst pages = [\"/Users/a0000/projects/unreal/src/app/home/profile/[id]/page.tsx\"];\nexport { tree, pages };\nexport { default as GlobalError } from \"/Users/a0000/projects/unreal/src/app/global-error.tsx\" with {\n    'turbopack-transition': 'next-server-utility'\n};\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nexport const __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\nexport * from \"next/dist/server/app-render/entry-base\" with {\n    'turbopack-transition': 'next-server-utility'\n};\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n    definition: {\n        kind: RouteKind.APP_PAGE,\n        page: \"/home/profile/[id]/page\",\n        pathname: \"/home/profile/[id]\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: '',\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    }\n});\n\n//# sourceMappingURL=app-page.js.map","module.exports = require(\"os\");","module.exports = require(\"stream\");","module.exports = require(\"util\");","module.exports = require(\"fs\");","module.exports = require(\"next/dist/server/app-render/work-async-storage.external.js\");","module.exports = require(\"node:child_process\");","module.exports = require(\"path\");","module.exports = require(\"diagnostics_channel\");","module.exports = require(\"node:http\");","module.exports = require(\"node:zlib\");","module.exports = require(\"string_decoder\");","import { Client } from \"$/supabase/client\";\nimport { FollowStats } from \"$/types/data.types\";\nimport { logWarning, logError } from \"@/utils/sentryUtils\";\n\nexport const getFollowStats = async (\n  userId: string | undefined,\n  client: Client\n): Promise<FollowStats> => {\n  if (!userId) {\n    logWarning(\"No userId provided. Returning default stats\");\n    return { followeeCount: 0, followerCount: 0 };\n  }\n\n  try {\n    // Fetch follower count\n    const { count: followerCount, error: followerError } = await client\n      .from(\"follows\")\n      .select(\"*\", { count: \"exact\", head: true })\n      .eq(\"follower_id\", userId);\n\n    if (followerError) {\n      logError(\"Supabase follower count error\", followerError);\n      throw new Error(\n        `Error fetching follower count: ${followerError.message}`\n      );\n    }\n\n    // Fetch followee count\n    const { count: followeeCount, error: followeeError } = await client\n      .from(\"follows\")\n      .select(\"*\", { count: \"exact\", head: true })\n      .eq(\"followee_id\", userId);\n\n    if (followeeError) {\n      logError(\"Supabase followee count error\", followeeError);\n      throw new Error(\n        `Error fetching followee count: ${followeeError.message}`\n      );\n    }\n\n    return {\n      followerCount: followerCount || 0,\n      followeeCount: followeeCount || 0,\n    };\n  } catch (error) {\n    logError(\"Server error in getFollowStats\", error);\n    throw error;\n  }\n};\n","import { useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { supabase } from \"$/supabase/client\";\nimport { getFollowStats } from \"@/queries/user/getFollowerStat\";\nimport { dedupedRequest } from \"@/utils/queryOptimizer\";\nimport { useCallback } from \"react\";\n\ninterface FollowStats {\n  followeeCount: number;\n  followerCount: number;\n}\n\n/**\n * Optimized hook for fetching follow statistics with advanced caching\n * and optimistic update capabilities\n */\nexport function useFollowStats(userId?: string) {\n  const queryClient = useQueryClient();\n\n  const result = useQuery<FollowStats>({\n    queryKey: [\"followStats\", userId], // Unique cache key per user\n    queryFn: async () => {\n      if (!userId) return { followeeCount: 0, followerCount: 0 };\n\n      // Use deduplication to prevent duplicate API calls\n      return dedupedRequest(`followStats-${userId}`, () =>\n        getFollowStats(userId, supabase)\n      );\n    },\n    enabled: !!userId, // Only fetch if userId exists\n    staleTime: 1000 * 60 * 10, // Cache for 10 minutes\n    gcTime: 1000 * 60 * 30, // Keep in cache for 30 minutes\n  });\n\n  // Helper for optimistic updates when following\n  const incrementFolloweeCount = useCallback(\n    (otherUserId?: string) => {\n      if (!userId) return;\n\n      // Update current user's followee count (people I follow)\n      queryClient.setQueryData(\n        [\"followStats\", userId],\n        (old: FollowStats | undefined) => {\n          if (!old) return { followeeCount: 1, followerCount: 0 };\n          return {\n            ...old,\n            followeeCount: old.followeeCount + 1,\n          };\n        }\n      );\n\n      // Update target user's follower count (people following them)\n      if (otherUserId) {\n        queryClient.setQueryData(\n          [\"followStats\", otherUserId],\n          (old: FollowStats | undefined) => {\n            if (!old) return { followeeCount: 0, followerCount: 1 };\n            return {\n              ...old,\n              followerCount: old.followerCount + 1,\n            };\n          }\n        );\n      }\n    },\n    [userId, queryClient]\n  );\n\n  // Helper for optimistic updates when unfollowing\n  const decrementFolloweeCount = useCallback(\n    (otherUserId?: string) => {\n      if (!userId) return;\n\n      // Update current user's followee count (people I follow)\n      queryClient.setQueryData(\n        [\"followStats\", userId],\n        (old: FollowStats | undefined) => {\n          if (!old) return { followeeCount: 0, followerCount: 0 };\n          return {\n            ...old,\n            followeeCount: Math.max(0, old.followeeCount - 1),\n          };\n        }\n      );\n\n      // Update target user's follower count (people following them)\n      if (otherUserId) {\n        queryClient.setQueryData(\n          [\"followStats\", otherUserId],\n          (old: FollowStats | undefined) => {\n            if (!old) return { followeeCount: 0, followerCount: 0 };\n            return {\n              ...old,\n              followerCount: Math.max(0, old.followerCount - 1),\n            };\n          }\n        );\n      }\n    },\n    [userId, queryClient]\n  );\n\n  // Helper to refresh stats when needed\n  const refreshStats = useCallback(() => {\n    if (!userId) return;\n\n    queryClient.invalidateQueries({\n      queryKey: [\"followStats\", userId],\n      exact: true,\n    });\n  }, [userId, queryClient]);\n\n  return {\n    ...result,\n    // Expose enhanced API\n    incrementFolloweeCount,\n    decrementFolloweeCount,\n    refreshStats,\n    // Convenience properties with defaults\n    followeeCount: result.data?.followeeCount || 0,\n    followerCount: result.data?.followerCount || 0,\n  };\n}\n","module.exports = require(\"node:tls\");","module.exports = require(\"node:https\");","module.exports = require(\"node:os\");","module.exports = require(\"node:diagnostics_channel\");","module.exports = require(\"crypto\");","module.exports = require(\"https\");","module.exports = require(\"tls\");","module.exports = require(\"node:stream\");","module.exports = require(\"node:util\");","import { Client } from \"$/supabase/client\";\nimport { ExtendedUser } from \"$/types/data.types\";\nimport { logError } from \"@/utils/sentryUtils\";\n\n// Get user by ID with error handling\nexport const getUserById = async (\n  userId: string,\n  client: Client\n): Promise<Partial<ExtendedUser> | null> => {\n  if (!userId) return null;\n\n  try {\n    const { data, error } = await client\n      .from(\"profiles\")\n      .select(\"*\")\n      .eq(\"id\", userId)\n      .single();\n\n    if (error) {\n      logError(`Error fetching user profile with ID: ${userId}`, error);\n      return null;\n    }\n\n    if (!data) return null;\n\n    // Return processed user data\n    return {\n      id: data.id,\n      wallet: data.wallet as WalletObject | undefined,\n      bio: data.bio as string,\n      location: data.location as string,\n      creditBalance: data.credit_balance as number,\n      full_name: data.full_name as string,\n      username: data.display_name || data.full_name,\n      avatar_url: data.avatar_url as string,\n    };\n  } catch (error) {\n    logError(\"Unexpected error\", error);\n    return null;\n  }\n};\n","import {\n  dehydrate,\n  HydrationBoundary,\n  QueryClient,\n} from \"@tanstack/react-query\";\n// import { getPosts } from \"$/queries/post/getPosts\";\nimport { createClient } from \"$/supabase/server\";\nimport { Post } from \"$/types/data.types\";\nimport ProfileView from \"../components/profileView\";\nimport {\n  getIsDraftPostsByUser,\n  getPinnedPostsByUser,\n  getPostsByUser,\n  getPrivatePostsByUser,\n  getUserLikedPosts,\n} from \"@/queries/post/getPostsByUser\";\nimport { getUser } from \"$/queries/user\";\nimport UserData from \"../components/userData\";\nimport { Metadata } from \"next\";\nimport useUserData from \"@/hooks/useUserData\";\nimport { getUserById } from \"@/queries/user/getUserById\";\nimport dynamic from \"next/dynamic\";\n\ntype Props = {\n  params: { slug: string }; // Example if using dynamic routes\n  searchParams: { [key: string]: string | undefined };\n};\n\n// Optimize metadata generation\nexport async function generateMetadata({\n  params,\n}: {\n  params: Promise<{ [key: string]: string | undefined }>;\n}): Promise<Metadata> {\n  const paramsData = await params;\n  // Ensure params.id is available\n  if (!paramsData?.id) {\n    return {\n      title: \"Unreal Profile\",\n      description: \"Profile page on Unreal\",\n    };\n  }\n\n  try {\n    const supabaseSSR = await createClient();\n    const data = await getUserById(paramsData.id, supabaseSSR);\n\n    const username = data?.username || data?.full_name || \"Unreal Creator\";\n    const avatarUrl = data?.avatar_url || \"\";\n    const profileUrl = `https://unreal.art/home/profile/${paramsData.id}`;\n\n    return {\n      title: `${username} | Unreal Profile`,\n      description: `Check out ${username}'s creations on Unreal.`,\n      openGraph: {\n        type: \"website\",\n        url: profileUrl,\n        title: `${username} | Unreal Profile`,\n        description: `Check out ${username}'s creations on Unreal.`,\n        images: avatarUrl\n          ? [\n              {\n                url: avatarUrl,\n                width: 1200,\n                height: 630,\n                alt: `${username}'s profile picture`,\n              },\n            ]\n          : [],\n      },\n      twitter: {\n        card: \"summary_large_image\",\n        title: `${username} | Unreal Profile`,\n        description: `Check out ${username}'s creations on Unreal.`,\n        images: avatarUrl ? [avatarUrl] : [],\n      },\n    };\n  } catch (error) {\n    // Fallback metadata if there's an error\n    return {\n      title: \"Unreal Profile\",\n      description: \"Profile page on Unreal\",\n    };\n  }\n}\n\nexport default async function Profile({\n  searchParams,\n  params,\n}: {\n  searchParams: Promise<{ [key: string]: string | undefined }>;\n  params: Promise<{ [key: string]: string | undefined }>;\n}) {\n  const supabaseSSR = await createClient();\n  const queryClient = new QueryClient();\n  const queryParams = await searchParams;\n  const paramsData = await params;\n  // Prefetch only the first page of data initially\n  await queryClient.prefetchInfiniteQuery({\n    queryKey: [\"creation_posts\", queryParams?.s || \"public\"],\n    queryFn: async ({ pageParam = 0 }) => {\n      const result = await getInitialPosts(\n        supabaseSSR,\n        pageParam,\n        paramsData?.id as string,\n        queryParams?.s,\n      );\n      return {\n        data: result ?? [],\n        nextCursor: result.length > 0 ? pageParam + 1 : undefined,\n      };\n    },\n    initialPageParam: 0,\n    getNextPageParam: (lastPage: { data: Post[]; nextCursor?: number }) =>\n      lastPage?.nextCursor ?? undefined,\n    pages: 1, // Only prefetch first page\n  });\n\n  return (\n    <HydrationBoundary state={dehydrate(queryClient)}>\n      <div className=\"relative flex flex-col items-center background-color-primary-1 px-1 md:px-10 w-full\">\n        <UserData />\n        <ProfileView />\n      </div>\n    </HydrationBoundary>\n  );\n}\n\n// Separate function to handle initial post fetching logic\nasync function getInitialPosts(\n  supabase: any,\n  pageParam: number,\n  userId: string,\n  type?: string,\n) {\n  switch (type?.toUpperCase()) {\n    case \"PUBLIC\":\n      return await getPostsByUser(supabase, pageParam, userId);\n    case \"PRIVATE\":\n      return await getPrivatePostsByUser(supabase, pageParam, userId);\n    case \"LIKED\":\n      return await getUserLikedPosts(supabase, pageParam, userId);\n    case \"PINNED\":\n      return await getPinnedPostsByUser(supabase, pageParam, userId);\n    case \"DRAFT\":\n      return await getIsDraftPostsByUser(supabase, pageParam, userId);\n    default:\n      return await getPostsByUser(supabase, pageParam, userId);\n  }\n}\n","import * as Sentry from '@sentry/nextjs';\nimport * as origModule from 'next/dist/server/app-render/work-unit-async-storage.external.js';\nimport * as serverComponentModule from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport * from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\n\nconst asyncStorageModule = { ...origModule } ;\n\nconst requestAsyncStorage =\n  'workUnitAsyncStorage' in asyncStorageModule\n    ? asyncStorageModule.workUnitAsyncStorage\n    : 'requestAsyncStorage' in asyncStorageModule\n      ? asyncStorageModule.requestAsyncStorage\n      : undefined;\n\nconst serverComponent = serverComponentModule.default;\n\nlet wrappedServerComponent;\nif (typeof serverComponent === 'function') {\n  // For some odd Next.js magic reason, `headers()` will not work if used inside `wrapServerComponentsWithSentry`.\n  // Current assumption is that Next.js applies some loader magic to userfiles, but not files in node_modules. This file\n  // is technically a userfile so it gets the loader magic applied.\n  wrappedServerComponent = new Proxy(serverComponent, {\n    apply: (originalFunction, thisArg, args) => {\n      let sentryTraceHeader = undefined;\n      let baggageHeader = undefined;\n      let headers = undefined;\n\n      // We try-catch here just in `requestAsyncStorage` is undefined since it may not be defined\n      try {\n        const requestAsyncStore = requestAsyncStorage?.getStore() ;\n        sentryTraceHeader = requestAsyncStore?.headers.get('sentry-trace') ?? undefined;\n        baggageHeader = requestAsyncStore?.headers.get('baggage') ?? undefined;\n        headers = requestAsyncStore?.headers;\n      } catch (e) {\n        /** empty */\n      }\n\n      return Sentry.wrapServerComponentWithSentry(originalFunction, {\n        componentRoute: '/home/profile/[id]',\n        componentType: 'Page',\n        sentryTraceHeader,\n        baggageHeader,\n        headers,\n      }).apply(thisArg, args);\n    },\n  });\n} else {\n  wrappedServerComponent = serverComponent;\n}\n\nconst generateMetadata = serverComponentModule.generateMetadata\n  ? Sentry.wrapGenerationFunctionWithSentry(serverComponentModule.generateMetadata, {\n      componentRoute: '/home/profile/[id]',\n      componentType: 'Page',\n      generationFunctionIdentifier: 'generateMetadata',\n      requestAsyncStorage,\n    })\n  : undefined;\n\nconst generateImageMetadata = serverComponentModule.generateImageMetadata\n  ? Sentry.wrapGenerationFunctionWithSentry(serverComponentModule.generateImageMetadata, {\n      componentRoute: '/home/profile/[id]',\n      componentType: 'Page',\n      generationFunctionIdentifier: 'generateImageMetadata',\n      requestAsyncStorage,\n    })\n  : undefined;\n\nconst generateViewport = serverComponentModule.generateViewport\n  ? Sentry.wrapGenerationFunctionWithSentry(serverComponentModule.generateViewport, {\n      componentRoute: '/home/profile/[id]',\n      componentType: 'Page',\n      generationFunctionIdentifier: 'generateViewport',\n      requestAsyncStorage,\n    })\n  : undefined;\n\nconst wrappedServerComponent$1 = wrappedServerComponent;\n\nexport { wrappedServerComponent$1 as default, generateImageMetadata, generateMetadata, generateViewport };\n","module.exports = require(\"next/dist/server/app-render/work-unit-async-storage.external.js\");","\"use client\";\nimport {\n  useCallback,\n  useMemo,\n  useState,\n  useEffect,\n  useTransition,\n} from \"react\";\nimport Tabs from \"../../creations/components/Tabs\";\nimport PhotoGridTwo from \"../../creations/components/PhotoGridTwo\";\nimport { useParams, useSearchParams } from \"next/navigation\";\nimport { indexOf } from \"lodash\";\nimport { POST_GROUPS } from \"@/app/libs/constants\";\nimport { useUser } from \"@/hooks/useUser\";\nimport { TabText } from \"@/stores/creationAndProfileStore\";\nimport { useInfiniteQuery } from \"@tanstack/react-query\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { supabase } from \"$/supabase/client\";\nimport { Post } from \"$/types/data.types\";\nimport {\n  getIsDraftPostsByUser,\n  getPinnedPostsByUser,\n  getPostsByUser,\n  getPrivatePostsByUser,\n  getUserLikedPosts,\n} from \"@/queries/post/getPostsByUser\";\nimport { useCreationAndProfileStore } from \"@/stores/creationAndProfileStore\";\n\nexport default function ProfileView() {\n  const searchParams = useSearchParams();\n  const s = searchParams.get(\"s\");\n  const { id } = useParams();\n  const { userId } = useUser();\n  const { profileTab, initFromUrl, setProfileTab } =\n    useCreationAndProfileStore();\n\n  // Add isPending state with useTransition for smooth tab transitions\n  const [isPending, startTransition] = useTransition();\n\n  // Local state for tab index\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  // Initialize from URL on component mount\n  useEffect(() => {\n    if (s) {\n      console.log(\"ProfileView - Initializing from URL:\", s);\n      startTransition(() => {\n        initFromUrl(\"profile\", s);\n      });\n\n      // Set the local index state\n      const index = indexOf(POST_GROUPS, s.toUpperCase());\n      if (index >= 0) {\n        startTransition(() => {\n          setCurrentIndex(index);\n        });\n      }\n    }\n  }, []);\n\n  // Create a wrapper function for tab changes that uses transitions\n  const handleTabChange = useCallback(\n    (index: number) => {\n      startTransition(() => {\n        setCurrentIndex(index);\n        // Get the tab text from the index\n        const tabText = POST_GROUPS[index]?.toLowerCase();\n        if (tabText) {\n          const tabKey =\n            tabText.charAt(0).toUpperCase() + tabText.slice(1).toLowerCase();\n          setProfileTab(tabKey as any);\n        }\n      });\n    },\n    [setProfileTab]\n  );\n\n  // Sync with store changes\n  useEffect(() => {\n    if (profileTab) {\n      const index = indexOf(POST_GROUPS, profileTab.toUpperCase());\n      if (index >= 0 && index !== currentIndex) {\n        startTransition(() => {\n          setCurrentIndex(index);\n        });\n      }\n    }\n  }, [profileTab, currentIndex]);\n\n  const currentTabName = useMemo(() => {\n    return s || profileTab || \"Public\";\n  }, [s, profileTab]);\n\n  const {\n    isLoading: queryIsLoading,\n    isError,\n    error,\n    data,\n    hasNextPage,\n    fetchNextPage,\n    isFetchingNextPage,\n  } = useInfiniteQuery({\n    queryKey: [\"profile_posts\", currentTabName, id],\n    queryFn: async ({ pageParam = 0 }) => {\n      let result: Post[] = [];\n      const searchType = currentTabName.toUpperCase();\n\n      if (searchType === \"PUBLIC\") {\n        result = await getPostsByUser(supabase, pageParam, id as string);\n      } else if (searchType === \"PRIVATE\") {\n        result = await getPrivatePostsByUser(supabase, pageParam, id as string);\n      } else if (searchType === \"LIKED\") {\n        result = await getUserLikedPosts(supabase, pageParam, id as string);\n      } else if (searchType === \"PINNED\") {\n        result = await getPinnedPostsByUser(supabase, pageParam, id as string);\n      } else if (searchType === \"DRAFT\") {\n        result = await getIsDraftPostsByUser(supabase, pageParam, id as string);\n      } else {\n        result = await getPostsByUser(supabase, pageParam, id as string);\n      }\n\n      return {\n        data: result,\n        nextCursor: result.length > 0 ? pageParam + 1 : undefined,\n      };\n    },\n    getNextPageParam: (lastPage) => lastPage.nextCursor,\n    initialPageParam: 0,\n    staleTime: 1000 * 60, // 1 minute - good balance between freshness and performance\n    gcTime: 1000 * 60 * 10, // Keep unused data for 10 minutes\n    refetchOnMount: \"always\", // Always check for updates but use stale data while fetching\n    refetchOnWindowFocus: false, // Disable automatic refetch on window focus to prevent flickering\n  });\n\n  // Combine isPending with queryIsLoading for a comprehensive loading state\n  const isLoading = isPending || queryIsLoading;\n\n  const contentConfig = useMemo(\n    () => ({\n      Public: {\n        title: \"Public\" as TabText,\n        content: \"You have not published anything yet.\",\n        subContent: \"Tap your inner artist and create something amazing!\",\n      },\n      Private: {\n        title: \"Private\" as TabText,\n        content: \"You don't have any private post.\",\n        subContent: \"You can go ahead and create one.\",\n      },\n      Liked: {\n        title: \"Liked\" as TabText,\n        content: \"You haven't liked anything yet.\",\n        subContent: \"Find something you love and tap that 🤍!\",\n      },\n      Pinned: {\n        title: \"Pinned\" as TabText,\n        content: \"You haven't pinned anything yet.\",\n        subContent: \"Find something you love and pin it!\",\n      },\n      Draft: {\n        title: \"Draft\" as TabText,\n        content: \"You haven't saved anything yet.\",\n        subContent: \"Create something you love to post later\",\n      },\n    }),\n    []\n  );\n\n  const renderContent = useCallback(() => {\n    // Handle error cases but don't show errors during transitions\n    if (isError && !isPending) {\n      return (\n        <div className=\"text-center text-red-500\">\n          {\"message\" in error ? error.message : \"An error occurred\"}\n        </div>\n      );\n    }\n\n    const configs = [\"Public\", \"Private\", \"Liked\", \"Pinned\", \"Draft\"];\n    const config =\n      contentConfig[configs[currentIndex] as keyof typeof contentConfig];\n    if (!config) return null;\n\n    // During transitions or loading, show loading state in PhotoGridTwo\n    // Or when we have data, let PhotoGridTwo handle the display\n    return (\n      <PhotoGridTwo\n        {...config}\n        data={data}\n        isLoading={isLoading}\n        hasNextPage={hasNextPage}\n        fetchNextPage={fetchNextPage}\n        isFetchingNextPage={isFetchingNextPage}\n      />\n    );\n  }, [\n    isLoading,\n    isPending,\n    isError,\n    error,\n    data,\n    currentIndex,\n    contentConfig,\n    hasNextPage,\n    fetchNextPage,\n    isFetchingNextPage,\n  ]);\n\n  return (\n    <div className=\"w-full \">\n      <div className=\"w-full mb-4\">\n        <Tabs\n          currentIndex={currentIndex}\n          setCurrentIndex={handleTabChange}\n          hideDraft={userId !== id}\n          section=\"profile\"\n        />\n      </div>\n\n      <div className=\"w-full \">{renderContent()}</div>\n    </div>\n  );\n}\n","import { supabase } from \"$/supabase/client\";\nimport { getUserById } from \"@/queries/user/getUserById\";\nimport { useQuery, useQueryClient, QueryClient } from \"@tanstack/react-query\";\nimport {\n  dedupedRequest,\n  normalizeEntity,\n  getEntity,\n} from \"@/utils/queryOptimizer\";\nimport { useCallback, useMemo } from \"react\";\nimport { useUser } from \"./useUser\";\nimport { log, startSpan } from \"@/utils/sentryUtils\";\n\n// Define the user type to make the hook more type-safe\nexport interface UserData {\n  id: string;\n  wallet?: any;\n  bio?: string | null;\n  location?: string | null;\n  likesReceived?: number;\n  creditBalance?: number;\n  full_name?: string | null;\n  avatar_url?: string | null;\n  username?: string | null;\n  display_name?: string | null;\n  [key: string]: any; // For flexibility\n}\n\n/**\n * Enhanced hook for fetching data about a profile being viewed.\n *\n * This hook is specifically for getting data about any user profile (which could\n * be the current user or another user), while useUser is for the authenticated user.\n */\nexport default function useUserData(profileId: string | undefined | null) {\n  const queryClient = useQueryClient();\n  // Get authenticated user information to determine if viewing own profile\n  const { userId: currentUserId } = useUser();\n\n  const result = useQuery<UserData | null>({\n    queryKey: [\"profile_data\", profileId],\n    queryFn: async () => {\n      if (!profileId) return null;\n\n      // Start tracking performance\n      const finishSpan = startSpan(\"getUserData\", \"data-fetching\", {\n        profileId,\n      });\n\n      try {\n        // Try to get from normalized entity cache first\n        const cachedUser = getEntity(\"users\", profileId);\n        if (cachedUser) {\n          finishSpan();\n          return cachedUser as UserData;\n        }\n\n        // Use request deduplication to prevent duplicate API calls\n        const userData = await dedupedRequest(\n          `user-profile-${profileId}`,\n          async () => {\n            const fetchSpan = startSpan(\"getUserById\", \"database-query\", {\n              profileId,\n            });\n            const result = await getUserById(profileId, supabase);\n            fetchSpan();\n            return result;\n          }\n        );\n\n        if (userData) {\n          // Store in normalized cache for efficient reuse across components\n          normalizeEntity(\"users\", {\n            ...userData,\n            id: profileId,\n          });\n        }\n\n        finishSpan();\n        return userData as UserData;\n      } catch (error) {\n        // Make sure we finish the span even if there's an error\n        finishSpan();\n        throw error;\n      }\n    },\n    enabled: !!profileId, // Ensures query only runs if profileId exists\n    staleTime: 1000 * 60 * 5, // Cache for 5 minutes\n    gcTime: 1000 * 60 * 30, // Keep in cache for 30 minutes\n    retry: 1, // Retry once on failure\n  });\n\n  // Helper function to update user data optimistically\n  const updateUserDataOptimistically = useCallback(\n    (updates: Partial<UserData>) => {\n      if (!profileId) return;\n\n      const finishSpan = startSpan(\n        \"updateUserDataOptimistically\",\n        \"client-update\",\n        {\n          profileId,\n          updateFields: Object.keys(updates),\n        }\n      );\n\n      // Log current data and updates for debugging\n      log(\n        \"Current data in cache\",\n        queryClient.getQueryData([\"profile_data\", profileId])\n      );\n      log(\"Applying updates\", updates);\n\n      // Filter updates to only include valid database fields plus UI fields\n      const validDatabaseFields = [\"full_name\", \"display_name\", \"bio\"];\n      const enhancedUpdates: Partial<UserData> = {};\n\n      // Copy only valid fields from updates\n      Object.entries(updates).forEach(([key, value]) => {\n        if (\n          validDatabaseFields.includes(key) ||\n          key === \"display_name\" ||\n          key === \"firstname\" ||\n          key === \"lastname\"\n        ) {\n          enhancedUpdates[key] = value;\n        }\n      });\n\n      // Update the cache with new data\n      queryClient.setQueryData(\n        [\"profile_data\", profileId],\n        (oldData: UserData | null | undefined) => {\n          if (!oldData) return oldData;\n\n          // If display_name is being updated, also update username\n          if (enhancedUpdates.display_name) {\n            enhancedUpdates.username = enhancedUpdates.display_name;\n          }\n\n          // Merge updates with existing data rather than replacing\n          const newData = {\n            ...oldData,\n            ...enhancedUpdates,\n          };\n\n          log(\"New data after merge\", newData);\n\n          // Update normalized entity cache too\n          normalizeEntity(\"users\", {\n            ...newData,\n            id: profileId,\n          });\n\n          return newData;\n        }\n      );\n\n      finishSpan();\n    },\n    [profileId, queryClient]\n  );\n\n  // Check if the profile being viewed is the current user's profile\n  const isOwnProfile = useMemo(() => {\n    return !!currentUserId && currentUserId === profileId;\n  }, [currentUserId, profileId]);\n\n  return {\n    ...result,\n    updateUserDataOptimistically,\n    isOwnProfile,\n    profileId, // Include the profileId for reference\n  };\n}\n\n/**\n * Prefetch a user's profile data to improve UX when navigating\n * @param queryClient - The QueryClient instance\n * @param userId - The ID of the user to prefetch\n */\nexport const prefetchUserData = async (\n  queryClient: QueryClient,\n  userId: string\n) => {\n  if (!userId) return;\n\n  const finishSpan = startSpan(\"prefetchUserData\", \"prefetching\", { userId });\n\n  // Don't prefetch if already in cache\n  if (queryClient.getQueryData([\"profile_data\", userId])) {\n    finishSpan();\n    return;\n  }\n\n  return queryClient.prefetchQuery({\n    queryKey: [\"profile_data\", userId],\n    queryFn: async () => {\n      return dedupedRequest(`user-profile-${userId}`, async () => {\n        const fetchSpan = startSpan(\"getUserById\", \"database-query\", {\n          userId,\n        });\n        const userData = await getUserById(userId, supabase);\n        fetchSpan();\n\n        if (userData) {\n          // Store in normalized cache\n          normalizeEntity(\"users\", {\n            ...userData,\n            id: userId,\n          });\n        }\n\n        finishSpan();\n        return userData as UserData;\n      });\n    },\n    staleTime: 1000 * 60 * 5, // Cache for 5 minutes\n  });\n};\n","import Skeleton from \"react-loading-skeleton\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\n\nconst ProfileSkeleton = () => {\n  return (\n    <div className=\"flex flex-col md:flex-row pt-5 w-full mb-12 gap-4\">\n      {/* Profile Image & Buttons */}\n      <div className=\"flex gap-4\">\n        <div className=\"w-28 h-28 md:w-52 md:h-52\">\n          <Skeleton\n            circle\n            height=\"100%\"\n            baseColor=\"#1a1a1a\"\n            highlightColor=\"#333\"\n          />\n        </div>\n\n        <div className=\"block md:hidden\">\n          <Skeleton\n            width={150}\n            height={32}\n            baseColor=\"#1a1a1a\"\n            highlightColor=\"#333\"\n          />\n          <div className=\"flex my-4 gap-3\">\n            <Skeleton\n              width={112}\n              height={36}\n              baseColor=\"#1a1a1a\"\n              highlightColor=\"#333\"\n            />\n            <Skeleton\n              width={48}\n              height={36}\n              baseColor=\"#1a1a1a\"\n              highlightColor=\"#333\"\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Profile Details */}\n      <div className=\"flex-grow text-primary-5\">\n        <div className=\"hidden md:block\">\n          <Skeleton\n            width={200}\n            height={32}\n            baseColor=\"#1a1a1a\"\n            highlightColor=\"#333\"\n          />\n          <div className=\"flex my-4 gap-3\">\n            <Skeleton\n              width={112}\n              height={36}\n              baseColor=\"#1a1a1a\"\n              highlightColor=\"#333\"\n            />\n            <Skeleton\n              width={48}\n              height={36}\n              baseColor=\"#1a1a1a\"\n              highlightColor=\"#333\"\n            />\n          </div>\n        </div>\n\n        {/* Follower, Following, Likes */}\n        <div className=\"flex gap-x-4 my-4\">\n          <Skeleton\n            width={80}\n            height={32}\n            baseColor=\"#1a1a1a\"\n            highlightColor=\"#333\"\n          />\n          <Skeleton\n            width={80}\n            height={32}\n            baseColor=\"#1a1a1a\"\n            highlightColor=\"#333\"\n          />\n          <Skeleton\n            width={80}\n            height={32}\n            baseColor=\"#1a1a1a\"\n            highlightColor=\"#333\"\n          />\n        </div>\n\n        {/* Bio Section */}\n        <Skeleton\n          width={50}\n          height={24}\n          baseColor=\"#1a1a1a\"\n          highlightColor=\"#333\"\n        />\n        <Skeleton\n          width=\"80%\"\n          height={18}\n          count={2}\n          baseColor=\"#1a1a1a\"\n          highlightColor=\"#333\"\n        />\n      </div>\n\n      {/* Credits Button */}\n      <div className=\"hidden md:block\">\n        <Skeleton\n          width={120}\n          height={40}\n          baseColor=\"#1a1a1a\"\n          highlightColor=\"#333\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileSkeleton;\n","import { DeleteIcon, UserProfileIcon } from \"@/app/components/icons\";\n\ninterface EditModalProps {\n  openProfile: () => void;\n  deleteProfile: () => void;\n}\n\nexport default function EditModal({\n  openProfile,\n  deleteProfile,\n}: EditModalProps) {\n  return (\n    <div className=\"flex flex-col gap-3\">\n      <button onClick={openProfile} className=\"flex h-12 items-center gap-2\">\n        <UserProfileIcon color=\"#C1C1C1\" />\n        <p className=\"text-primary-6\">Edit Profile</p>\n      </button>\n\n      <button onClick={deleteProfile} className=\"flex h-11 items-center gap-2\">\n        <DeleteIcon color=\"#FF5252\" />\n        <p className=\"text-[#FF5252]\">Delete Account Permanently</p>\n      </button>\n    </div>\n  );\n}\n","\"use client\";\n\nimport { useState } from \"react\";\nimport { supabase } from \"$/supabase/client\";\nimport { axiosInstanceLocal } from \"@/lib/axiosInstance\";\nimport { useRouter } from \"next/navigation\";\nimport { log, logError } from \"@/utils/sentryUtils\";\n\ninterface DeleteAccountResponse {\n  success: boolean;\n  error?: string;\n}\n\nconst useDeleteAccount = () => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const router = useRouter(); // Use Next.js router\n\n  const deleteAccount = async (): Promise<DeleteAccountResponse> => {\n    setLoading(true);\n    setError(null);\n\n    log(\"Account deletion process initiated\");\n\n    try {\n      const { data: userData, error: userError } =\n        await supabase.auth.getUser();\n      if (userError || !userData.user) {\n        const errorMsg = \"You need to be logged in.\";\n        logError(errorMsg, userError || new Error(errorMsg));\n        throw new Error(errorMsg);\n      }\n\n      const { data: sessionData } = await supabase.auth.getSession();\n\n      log(\"Sending account deletion request\", { userId: userData.user.id });\n\n      // Send request to delete account\n      const response = await axiosInstanceLocal.delete(\"/api/account/delete\", {\n        headers: { \"Content-Type\": \"application/json\" },\n        data: {\n          userId: userData.user.id,\n          token: sessionData.session?.access_token,\n        },\n      });\n\n      if (response.status === 200) {\n        log(\"Account deleted successfully, logging out user\");\n        // Log the user out from Supabase\n        await supabase.auth.signOut();\n\n        // Redirect to home page\n        router.push(\"/\");\n      }\n\n      return { success: true };\n    } catch (err: any) {\n      const errorMessage =\n        err.response?.data?.error ||\n        err.message ||\n        \"An unexpected error occurred\";\n\n      logError(\"Account deletion failed\", err);\n      setError(errorMessage);\n      return { success: false, error: errorMessage };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return { deleteAccount, loading, error };\n};\n\nexport default useDeleteAccount;\n","\"use client\";\nimport useDeleteAccount from \"@/hooks/useDeleteAccount\";\nimport { FormEvent, useState } from \"react\";\nimport { toast } from \"sonner\";\n\nexport default function DeleteModal({\n  closeAction,\n}: {\n  closeAction: () => void;\n}) {\n  const { deleteAccount, loading, error } = useDeleteAccount();\n  const [confirmation, setConfirmation] = useState(\"\");\n  const handleDelete = async (e: FormEvent) => {\n    e.preventDefault();\n    if (confirmation !== \"DELETE\") {\n      toast.error(\"Please enter the correct confirmation\");\n      return;\n    }\n    await deleteAccount();\n    // if (result.success) {\n    //   alert(\"Account deleted successfully\");\n    // } else {\n    //   alert(`Error: ${result.error}`);\n    // }\n  };\n\n  return (\n    <div className=\"flex flex-col gap-3\">\n      <p className=\"text-primary-7 text-sm\">\n        Deleting your account will permanently remove your profile, credits, and\n        all associated data, including your generated images and history. Any\n        remaining credits will be lost, and this action is irreversible. To\n        confirm, type <strong className=\"text-primary-5\">DELETE</strong> in the\n        field below.\n      </p>\n\n      <form>\n        <label className=\"text-primary-4 mb-2 block\">\n          Confirm Account Deletion\n        </label>\n\n        <input\n          className=\"block border-[1px] border-primary-10 h-14 w-full rounded-2xl bg-inherit outline-none placeholder:text-primary-7 indent-4\"\n          type=\"text\"\n          placeholder=\"Enter DELETE to proceed\"\n          onChange={(e) => setConfirmation(e.target.value)}\n        />\n\n        <div className=\"flex justify-end h-12 mb-4 mt-8 text-primary-6 gap-4\">\n          <button\n            onClick={closeAction}\n            className=\"border-primary-10 w-40 border-[1px] rounded-full\"\n          >\n            Cancel\n          </button>\n\n          <button\n            className={`${\n              confirmation !== \"DELETE\" ? \"border-primary-10\" : \"bg-primary-10 \"\n            } w-40 rounded-full text-primary-3 disabled:bg-primary-11 disabled:text-primary-9`}\n            disabled={confirmation !== \"DELETE\"}\n            type=\"button\"\n            onClick={handleDelete}\n          >\n            Delete Account\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { supabase } from \"$/supabase/client\";\nimport { normalizeEntity, getEntity } from \"@/utils/queryOptimizer\";\nimport { useCallback, useRef } from \"react\";\nimport { toast } from \"sonner\";\nimport { log, logError } from \"@/utils/sentryUtils\";\n\n// Enhanced interface for user data\ninterface UserData {\n  full_name?: string | null;\n  bio?: string | null;\n  display_name?: string | null;\n  location?: string | null;\n  avatar_url?: string | null;\n  credit_balance?: number;\n  email?: string | null;\n  follower_count?: number;\n  following_count?: number;\n  [key: string]: any; // Allow additional fields for flexibility\n}\n\n/**\n * Enhanced hook for updating user profile details with optimized\n * performance and better error handling.\n *\n * This hook is primarily for updating the authenticated user's profile,\n * but can also be used to update any profile when appropriate permissions exist.\n */\nexport const useUpdateUserDetails = () => {\n  const queryClient = useQueryClient();\n\n  // For throttling rapid updates\n  const throttleTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const pendingUpdatesRef = useRef<{ user: UserData; id: string } | null>(null);\n\n  const mutation = useMutation({\n    mutationFn: async ({\n      user,\n      id,\n      preserveFields = false,\n    }: {\n      user: UserData;\n      id: string;\n      preserveFields?: boolean;\n    }): Promise<UserData> => {\n      if (!id) throw new Error(\"User ID is required\");\n\n      // Create an update object with only the fields the database expects\n      const updates: Partial<UserData> = {};\n\n      // Only include fields the database expects\n      const allowedFields = [\"full_name\", \"display_name\", \"bio\"];\n\n      Object.entries(user).forEach(([key, value]) => {\n        if (allowedFields.includes(key) && value !== undefined) {\n          updates[key] = value;\n        }\n      });\n\n      // Only send the update if there are actual changes\n      if (Object.keys(updates).length === 0) {\n        log(\"No valid fields to update\");\n        return user; // No changes to make\n      }\n\n      log(\"Final updates to send to API:\", updates);\n\n      // Send only the expected fields to the database\n      const { data, error } = await supabase\n        .from(\"profiles\")\n        .update(updates)\n        .eq(\"id\", id)\n        .select();\n\n      if (error) throw new Error(error.message);\n\n      // For the return data, preserve all the fields but update the ones from the server\n      const returnData = {\n        ...user,\n        ...(data?.[0] || {}),\n      };\n\n      // Map credit_balance to creditBalance for UI if needed\n      if (returnData.credit_balance && returnData.credit_balance !== 0) {\n        (returnData as any).creditBalance = returnData.credit_balance;\n      }\n\n      return returnData;\n    },\n\n    onMutate: async ({ user, id }) => {\n      // Cancel any outgoing refetches to avoid overwriting our optimistic update\n      await Promise.all([\n        queryClient.cancelQueries({ queryKey: [\"user\"] }),\n        queryClient.cancelQueries({ queryKey: [\"profile_data\", id] }),\n        queryClient.cancelQueries({ queryKey: [\"user\", id] }),\n      ]);\n\n      // Snapshot the previous values\n      const previousUser = queryClient.getQueryData<{\n        user: any;\n        userId: string;\n      }>([\"user\"]);\n\n      const previousProfile = queryClient.getQueryData<UserData>([\n        \"profile_data\",\n        id,\n      ]);\n\n      const previousUserData = queryClient.getQueryData([\"user\", id]);\n\n      // Optimistically update all user data in cache - preserve existing data\n      queryClient.setQueryData([\"user\"], (oldData: any) => {\n        if (!oldData || !oldData.user) return oldData;\n\n        return {\n          ...oldData,\n          user: { ...oldData.user, ...user },\n        };\n      });\n\n      // Update profile data - preserve existing data\n      queryClient.setQueryData([\"profile_data\", id], (oldData: any) => {\n        if (!oldData) return oldData;\n        return {\n          ...oldData,\n          ...user,\n        };\n      });\n\n      // Update normalized cache - preserve existing data\n      if (id) {\n        const existingEntity = getEntity(\"users\", id) || {};\n\n        // Log for debugging\n        log(\"Existing entity before update\", existingEntity);\n        log(\"Updates being applied\", user);\n\n        // Create an enhanced update with only valid fields and field mappings\n        const validUpdateFields = [\"full_name\", \"display_name\", \"bio\"];\n        const clientCacheUpdate = { ...user };\n\n        // If display_name is being updated, also update username for UI\n\n        clientCacheUpdate.username = user.display_name;\n\n        log(\"Enhanced client cache update\", clientCacheUpdate);\n\n        normalizeEntity(\"users\", {\n          ...existingEntity,\n          ...clientCacheUpdate,\n          id,\n        });\n      }\n\n      return { previousUser, previousProfile, previousUserData, id };\n    },\n\n    onError: (error, { id }, context) => {\n      logError(\"Error updating user details:\", error);\n      toast.error(`Failed to update profile: ${error.message}`);\n\n      // Revert all optimistic updates\n      if (context?.previousUser) {\n        queryClient.setQueryData([\"user\"], context.previousUser);\n      }\n\n      if (context?.previousProfile) {\n        queryClient.setQueryData([\"profile_data\", id], context.previousProfile);\n      }\n\n      if (context?.previousUserData) {\n        queryClient.setQueryData([\"user\", id], context.previousUserData);\n      }\n    },\n\n    onSuccess: (data, { id }) => {\n      // Toast success message\n      toast.success(\"Profile updated successfully\");\n\n      // Update all related queries for consistency\n      // Add updated data to normalized cache\n      normalizeEntity(\"users\", {\n        id,\n        ...data,\n      });\n\n      // Only invalidate if absolutely necessary\n      // Most updates should be handled by setQueryData already\n      if (data.avatar_url) {\n        // Avatar changes need a full refresh\n        queryClient.invalidateQueries({ queryKey: [\"user\"] });\n        queryClient.invalidateQueries({ queryKey: [\"profile_data\", id] });\n        queryClient.invalidateQueries({ queryKey: [\"user\", id] });\n      }\n    },\n  });\n\n  // Helper to throttle rapid consecutive updates\n  const throttledUpdate = useCallback(\n    (id: string, updates: UserData) => {\n      log(\"Throttled update called with\", { id, updates });\n\n      // If an update is already pending, combine the updates\n      if (pendingUpdatesRef.current) {\n        log(\"Existing pending updates\", pendingUpdatesRef.current);\n\n        // Before combining, check if we need to preserve the display_name\n        const needToPreserveDisplayName =\n          (updates.hasOwnProperty(\"firstname\") ||\n            updates.hasOwnProperty(\"lastname\")) &&\n          !updates.hasOwnProperty(\"display_name\") &&\n          pendingUpdatesRef.current.user.display_name;\n\n        // Combine the updates\n        pendingUpdatesRef.current = {\n          id,\n          user: {\n            ...pendingUpdatesRef.current.user,\n            ...updates,\n          },\n        };\n\n        // If updating first/last name but not display_name, preserve the existing display_name\n        if (needToPreserveDisplayName) {\n          log(\n            \"Preserving display_name when combining updates with first/last name changes\"\n          );\n          pendingUpdatesRef.current.user.display_name =\n            pendingUpdatesRef.current.user.display_name;\n        }\n\n        log(\"Combined pending updates\", pendingUpdatesRef.current);\n        return;\n      }\n\n      // Store the current update\n      pendingUpdatesRef.current = { user: updates, id };\n      log(\"Stored pending update\", pendingUpdatesRef.current);\n\n      // Clear any existing timeout\n      if (throttleTimeoutRef.current) {\n        clearTimeout(throttleTimeoutRef.current);\n      }\n\n      // Set a timeout to process the update\n      throttleTimeoutRef.current = setTimeout(() => {\n        if (pendingUpdatesRef.current) {\n          log(\"Processing throttled update\");\n\n          // Get the current data from cache before making the update\n          const currentProfileData = queryClient.getQueryData<UserData>([\n            \"profile_data\",\n            id,\n          ]);\n          log(\"Current profile data from cache\", currentProfileData);\n\n          if (currentProfileData) {\n            // Create an update object that only includes fields the database expects\n            const updateData: Partial<UserData> = {};\n            const pendingUpdates = pendingUpdatesRef.current?.user || {};\n\n            // Only include fields the database expects\n            const allowedFields = [\"full_name\", \"display_name\", \"bio\"];\n\n            // First check if we're updating first/last name without explicitly updating display_name\n            const isUpdatingName =\n              (pendingUpdates.hasOwnProperty(\"firstname\") ||\n                pendingUpdates.hasOwnProperty(\"lastname\")) &&\n              !pendingUpdates.hasOwnProperty(\"display_name\");\n\n            // If we're updating name but not display_name, make sure to preserve the current display_name\n            if (isUpdatingName && currentProfileData.display_name) {\n              log(\n                \"Name update detected - explicitly preserving display_name\",\n                currentProfileData.display_name\n              );\n              // Include the current display_name in our update to prevent it from being lost\n              pendingUpdates.display_name = currentProfileData.display_name;\n            }\n\n            // Process each pending update for allowed fields\n            Object.entries(pendingUpdates).forEach(([key, value]) => {\n              if (allowedFields.includes(key) && value !== undefined) {\n                updateData[key] = value;\n              }\n            });\n\n            // Special handling for first/last name which affect full_name\n            if (\n              !updateData.full_name &&\n              (pendingUpdates.hasOwnProperty(\"firstname\") ||\n                pendingUpdates.hasOwnProperty(\"lastname\"))\n            ) {\n              // This means we're updating firstname or lastname, but not directly full_name\n              log(\"Handling firstname/lastname update\");\n\n              // We need to get the current full_name and update it\n              const currentFirstName =\n                pendingUpdates.firstname ||\n                (currentProfileData.full_name\n                  ? currentProfileData.full_name.split(\" \")[0]\n                  : \"\");\n\n              const currentLastName =\n                pendingUpdates.lastname ||\n                (currentProfileData.full_name &&\n                currentProfileData.full_name.split(\" \").length > 1\n                  ? currentProfileData.full_name.split(\" \").slice(1).join(\" \")\n                  : \"\");\n\n              updateData.full_name =\n                `${currentFirstName} ${currentLastName}`.trim();\n              log(\n                \"Setting full_name from first/last name\",\n                updateData.full_name\n              );\n            }\n\n            // Double-check that display_name is preserved\n            if (\n              updateData.full_name &&\n              !updateData.display_name &&\n              currentProfileData.display_name\n            ) {\n              log(\"Re-checking display_name is preserved during name update\");\n              updateData.display_name = currentProfileData.display_name;\n            }\n\n            // Skip update if nothing to update\n            if (Object.keys(updateData).length === 0) {\n              log(\"No valid fields to update, skipping\");\n              pendingUpdatesRef.current = null;\n              throttleTimeoutRef.current = null;\n              return;\n            }\n\n            log(\"Final update data to send to API\", updateData);\n\n            // Execute the mutation with only the allowed fields\n            mutation.mutate({\n              user: updateData,\n              id,\n              preserveFields: true,\n            });\n          } else {\n            // If we don't have current data, use a safer approach\n            log(\"No current data found, using safer update approach\");\n\n            const updateData: Partial<UserData> = {};\n            const pendingUpdates = pendingUpdatesRef.current?.user || {};\n\n            // Only include fields the database expects\n            const allowedFields = [\"full_name\", \"display_name\", \"bio\"];\n            Object.entries(pendingUpdates).forEach(([key, value]) => {\n              if (allowedFields.includes(key) && value !== undefined) {\n                updateData[key] = value;\n              }\n            });\n\n            if (Object.keys(updateData).length > 0) {\n              mutation.mutate({\n                user: updateData,\n                id,\n                preserveFields: true,\n              });\n            }\n          }\n\n          // Reset state\n          pendingUpdatesRef.current = null;\n          throttleTimeoutRef.current = null;\n        }\n      }, 500); // 500ms throttle\n    },\n    [mutation, queryClient]\n  );\n\n  // Helper for field-by-field updates\n  const updateUserField = useCallback(\n    (id: string, field: string, value: any) => {\n      return mutation.mutate({\n        user: { [field]: value },\n        id,\n      });\n    },\n    [mutation]\n  );\n\n  // Helper to update a viewed profile (works with useUserData)\n  const updateViewedProfile = useCallback(\n    (profileId: string, updates: UserData) => {\n      // Get the current data from cache to ensure we preserve important fields\n      const currentProfileData = queryClient.getQueryData<UserData>([\n        \"profile_data\",\n        profileId,\n      ]);\n\n      // Create an update object that only includes fields the database expects\n      const updateData: Partial<UserData> = {};\n      const allowedFields = [\"full_name\", \"display_name\", \"bio\"];\n\n      // Process each update for allowed fields\n      Object.entries(updates).forEach(([key, value]) => {\n        if (allowedFields.includes(key) && value !== undefined) {\n          updateData[key] = value;\n        }\n      });\n\n      // Ensure display_name is preserved if we're updating full_name\n      if (\n        updateData.full_name &&\n        !updateData.display_name &&\n        currentProfileData?.display_name\n      ) {\n        updateData.display_name = currentProfileData.display_name;\n      }\n\n      // This updates both the authenticated user's data (if this is their profile)\n      // and the viewed profile data\n      return mutation.mutate({\n        user: updateData,\n        id: profileId,\n        preserveFields: true,\n      });\n    },\n    [mutation, queryClient]\n  );\n\n  return {\n    ...mutation,\n    updateUserField,\n    throttledUpdateUser: throttledUpdate,\n    updateViewedProfile,\n  };\n};\n","\"use client\";\nimport { splitName } from \"@/utils\";\nimport { useUpdateUserDetails } from \"../../../../../hooks/useUpdateUserDetails\";\nimport Image from \"next/image\";\nimport { FormEvent, useEffect, useState } from \"react\";\nimport { toast } from \"sonner\";\nimport { useUser } from \"@/hooks/useUser\";\nimport useUserData, { UserData } from \"@/hooks/useUserData\";\nimport { log } from \"@/utils/sentryUtils\";\n\n// Update the types to be more specific\ninterface EditProfileModalProps {\n  profileId: string; // ID of the profile being edited\n  closeAction: () => void;\n}\n\nexport default function EditProfileModal({\n  profileId,\n  closeAction,\n}: EditProfileModalProps) {\n  // Get both the authenticated user and the profile data\n  const { user: authUser } = useUser();\n  const { data: profileData, updateUserDataOptimistically } =\n    useUserData(profileId);\n\n  // Get update functions\n  const { updateViewedProfile, throttledUpdateUser } = useUpdateUserDetails();\n\n  // State for form fields - using the original UI's state structure\n  const [firstname, setFirstName] = useState<string>(\n    splitName(profileData?.full_name || \"\").firstName\n  );\n  const [lastname, setLastName] = useState<string>(\n    splitName(profileData?.full_name || \"\").lastName\n  );\n  const [full_name, setFullName] = useState<string>(\n    profileData?.full_name || \"\"\n  );\n  const [bio, setBio] = useState<string>(profileData?.bio || \"\");\n  const [displayName, setDisplayName] = useState<string>(\n    profileData?.display_name || profileData?.username || \"\"\n  );\n  const [email] = useState<string>(authUser?.email || \"\");\n\n  // Update local state when profile data changes\n  useEffect(() => {\n    if (profileData) {\n      const { firstName, lastName } = splitName(profileData.full_name || \"\");\n      setFirstName(firstName);\n      setLastName(lastName);\n      setFullName(profileData.full_name || \"\");\n      setBio(profileData.bio || \"\");\n      setDisplayName(profileData.display_name || profileData.username || \"\");\n      log(\"Updated display name from profile data\", {\n        displayName: profileData.display_name || profileData.username || \"\",\n      });\n    }\n  }, [profileData]);\n\n  // Update full name when first/last name changes\n  useEffect(() => {\n    if (firstname || lastname) setFullName(`${firstname} ${lastname}`);\n    else setFullName(\"\");\n  }, [firstname, lastname]);\n\n  // Modify the handleSave function to preserve existing data\n  const handleSave = (e: FormEvent) => {\n    e.preventDefault();\n\n    if (!profileId) {\n      toast.error(\"Cannot update profile: User ID is missing\");\n      return;\n    }\n\n    log(\"Profile update initiated\", {\n      full_name,\n      displayName,\n    });\n\n    if (!full_name || !displayName) {\n      toast.error(\"Please fill in all fields.\");\n      return;\n    }\n\n    // Log current profile data for debugging\n    log(\"Current profile data before update\", { profileData });\n\n    // Only include the fields we're actually changing\n    // Important: display_name should be used for the API, not username\n    const updates: Partial<UserData> = {\n      full_name,\n      bio,\n      display_name: displayName, // This is correct - we send display_name to the API\n    };\n\n    // Log what we're sending for debugging\n    log(\"Sending profile updates\", updates);\n\n    // Optimistically update the UI - preserve existing fields\n    updateUserDataOptimistically(updates);\n\n    // Update the profile with only the changed fields\n    updateViewedProfile(profileId, updates);\n\n    closeAction();\n  };\n\n  return (\n    <div className=\"flex flex-col gap-3\">\n      <form\n        onSubmit={handleSave}\n        className=\"grid grid-cols-2 gap-5 text-primary-8 text-sm\"\n      >\n        <div className=\"col-span-2 py-3 border-b-[1px] border-primary-9\">\n          <label className=\"mb-2 block text-primary-2\">Profile photo</label>\n          <div>\n            <Image\n              className=\"rounded-full\"\n              src={profileData?.avatar_url || \"/profile.jpg\"}\n              width={80}\n              height={80}\n              alt=\"\"\n            />\n          </div>\n        </div>\n\n        <div>\n          <label className=\"mb-1 block\">First Name</label>\n\n          <input\n            className=\"block border-[1px] border-primary-10 h-14 w-full rounded-2xl bg-inherit outline-none text-primary-5 placeholder:text-primary-7 indent-4\"\n            type=\"text\"\n            placeholder=\"Jon\"\n            value={firstname}\n            onChange={(e) => {\n              setFirstName(e.target.value);\n            }}\n          />\n        </div>\n\n        <div>\n          <label className=\"mb-1 block\">Last Name</label>\n\n          <input\n            className=\"block border-[1px] border-primary-10 h-14 w-full rounded-2xl bg-inherit outline-none text-primary-5 placeholder:text-primary-7 indent-4\"\n            type=\"text\"\n            placeholder=\"Doe\"\n            value={lastname}\n            onChange={(e) => {\n              setLastName(e.target.value);\n            }}\n          />\n        </div>\n\n        <div className=\"col-span-2\">\n          <label className=\"text-primary-4 mb-1 block\">Display name</label>\n\n          <input\n            className=\"block border-[1px] border-primary-10 h-14 w-full rounded-2xl bg-inherit outline-none text-primary-5 placeholder:text-primary-7 indent-4\"\n            type=\"text\"\n            placeholder=\"Jon Doe\"\n            value={displayName}\n            onChange={(e) => {\n              setDisplayName(e.target.value);\n            }}\n          />\n        </div>\n\n        <div className=\"col-span-2\">\n          <label className=\"mb-1 block\">Email Address</label>\n\n          <input\n            className=\"block border-[1px] border-primary-10 h-14 w-full rounded-2xl bg-inherit outline-none text-primary-5 placeholder:text-primary-7 indent-4\"\n            type=\"text\"\n            placeholder=\"Jondoe@gmail.com\"\n            readOnly\n            value={email}\n          />\n        </div>\n\n        <div className=\"col-span-2\">\n          <label className=\"text-primary-4 mb-1 block\">Bio</label>\n\n          <input\n            className=\"block border-[1px] border-primary-10 h-14 w-full rounded-2xl bg-inherit outline-none text-primary-5 placeholder:text-primary-7 indent-4\"\n            type=\"text\"\n            placeholder=\"Enter your bio\"\n            value={bio}\n            onChange={(e) => {\n              setBio(e.target.value);\n            }}\n          />\n        </div>\n\n        <div className=\"rounded-2xl flex items-center justify-end col-span-2 space-x-5\">\n          <button\n            onClick={closeAction}\n            type=\"button\"\n            className=\"cursor-pointer transition duration-300 hover:scale-105 px-8 py-3 rounded-full border-[1px] border-primary-10 text-primary-4\"\n          >\n            Cancel\n          </button>\n          <button\n            type=\"submit\"\n            className=\"bg-primary-1 text-black font-semibold cursor-pointer transition duration-300 hover:scale-105 px-8 py-3 rounded-full\"\n          >\n            Save\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","\"use client\";\n\nimport Image from \"next/image\";\nimport { useState, useEffect } from \"react\";\nimport { useQueryClient } from \"@tanstack/react-query\";\n\nimport { FlashIcon, ShareModernIcon } from \"@/app/components/icons\";\nimport ProfileInfo from \"./profileInfo\";\nimport { useFollowStats } from \"@/hooks/useFollowStats\";\nimport { useLikeStat } from \"@/hooks/useLikeStat\";\nimport { useParams } from \"next/navigation\";\n// import { useUser } from \"@/hooks/useUser\";\nimport useUserData, { prefetchUserData } from \"@/hooks/useUserData\";\nimport ProfileSkeleton from \"./profileSkeleton\";\nimport ModalWrapper from \"../../components/modals/modalWrapper\";\nimport EditModal from \"./modals/editModal\";\nimport DeleteModal from \"./modals/deleteModal\";\nimport EditProfileModal from \"./modals/editProfileModal\";\nimport ShareModal from \"../../components/modals/shareModal\";\nimport { useUser } from \"@/hooks/useUser\";\nimport Topup from \"@/app/menu/topup\";\nimport { useReadContract } from \"thirdweb/react\";\nimport { getContractInstance } from \"@/utils\";\nimport { torusTestnet } from \"$/constants/chains\";\nimport { formatEther } from \"ethers\";\nimport { useUpdateUserDetails } from \"@/hooks/useUpdateUserDetails\";\nimport { log, logError } from \"@/utils/sentryUtils\";\nimport OptimizedImage from \"@/app/components/OptimizedImage\";\n// import { getUser } from \"$/queries/user/getUser\";\n\ntype TitleType = \"Edit Account\" | \"Edit Profile\" | \"Delete Account\" | \"\";\n\nconst dartContract = getContractInstance(\n  torusTestnet,\n  process.env.NEXT_PUBLIC_DART_ADDRESS as string\n);\n\n// Add this placeholder function at the top of the file, outside the component\n// This is a placeholder - you would need to implement the actual function\nconst getFollowerIds = async (userId: string): Promise<string[]> => {\n  // In a real implementation, you would fetch follower IDs from your API\n  log(`Fetching followers for user ${userId}`);\n  return []; // Return empty array for now\n};\n\nexport default function UserData() {\n  const [open, setOpen] = useState(false);\n  const [topup, setTopup] = useState(false);\n  const [openShare, setOpenShare] = useState(false);\n  const [title, setTitle] = useState<TitleType>(\"\");\n\n  const queryClient = useQueryClient();\n\n  const params = useParams();\n  const profileId = params.id as string;\n\n  // Fetch data about the profile being viewed\n  const {\n    data: profileData,\n    isLoading: profileLoading,\n    error: profileError,\n    isOwnProfile,\n    updateUserDataOptimistically,\n  } = useUserData(profileId);\n\n  // Get the current authenticated user's information\n  const {\n    userId: authUserId,\n    user: authUser,\n    loading: authUserLoading,\n  } = useUser();\n\n  // Get the update function for profile data\n  const { updateViewedProfile } = useUpdateUserDetails();\n\n  //fetch follow stats\n  const { followeeCount, followerCount } = useFollowStats(profileId);\n\n  //fetch like stat\n  const { data: likeCount } = useLikeStat(profileId);\n\n  // credit\n  const { data: dartBalance, refetch } = useReadContract({\n    contract: dartContract,\n    method: \"function balanceOf(address account) returns (uint256)\",\n    params: [authUser?.wallet?.address || \"\"],\n  });\n\n  // Prefetch related users when this profile is viewed\n  useEffect(() => {\n    if (profileData && followeeCount && followeeCount > 0) {\n      // Prefetch followers data when available\n      const prefetchFollowers = async () => {\n        try {\n          // Get follower IDs\n          const followerIds = await getFollowerIds(profileId);\n          // Prefetch the first 3-5 followers for better UX\n          followerIds.slice(0, 5).forEach((followerId: string) => {\n            prefetchUserData(queryClient, followerId);\n          });\n        } catch (error) {\n          logError(\"Error prefetching followers\", error);\n        }\n      };\n\n      prefetchFollowers();\n    }\n  }, [profileId, followeeCount, queryClient, profileData]);\n\n  // Example of how to use profile updates when it's the user's own profile\n  // const updateProfileBio = async (newBio: string) => {\n  //   if (!isOwnProfile || !profileId) return;\n\n  //   // Optimistically update the UI\n  //   updateUserDataOptimistically({\n  //     bio: newBio,\n  //   });\n\n  //   // Then perform the actual update\n  //   try {\n  //     await updateViewedProfile(profileId, { bio: newBio });\n  //   } catch (error) {\n  //     const err = error as Error;\n  //     logError(\"Failed to update bio\", err);\n  //     // The UI will automatically revert if the mutation fails\n  //   }\n  // };\n\n  if (profileLoading || authUserLoading || !authUser)\n    return <ProfileSkeleton />;\n  if (profileError)\n    return <p>Error loading profile data: {profileError.message}</p>;\n\n  const showEditAccount = () => {\n    // Only allow editing if it's the user's own profile\n    if (!isOwnProfile) return;\n\n    setOpen(true);\n    setTitle(\"Edit Account\");\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setTitle(\"\");\n  };\n\n  return (\n    <>\n      <div className=\"flex flex-col md:flex-row pt-5 w-full mb-12 gap-4\">\n        <div className=\"flex gap-4\">\n          <div className=\"w-28 h-28 md:w-52 md:h-52\">\n            <OptimizedImage\n              className=\"rounded-full\"\n              src={profileData?.avatar_url || \"/profile.jpg\"}\n              width={200}\n              height={200}\n              alt={`${profileData?.full_name}'s profile picture`}\n              trackPerformance={true}\n              imageName={`profile-${profileId}`}\n            />\n          </div>\n\n          <div className=\"block md:hidden\">\n            <p className=\"text-3xl font-medium\">{profileData?.full_name}</p>\n\n            <div className=\"flex my-4 gap-3\">\n              {isOwnProfile && (\n                <button\n                  onClick={showEditAccount}\n                  className=\"flex justify-center items-center h-9 w-28 text-primary-4 font-medium text-sm topup-btn-gradient rounded-2xl bg-primary-11\"\n                >\n                  <p className=\"text-sm\">Edit Account</p>\n                </button>\n              )}\n\n              <button className=\"flex justify-center items-center h-9 w-12 text-primary-4 font-medium text-sm topup-btn-gradient rounded-2xl bg-primary-11\">\n                <ShareModernIcon width={16} height={16} color=\"#DADADA\" />\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex-grow text-primary-5\">\n          <div className=\"hidden md:block\">\n            <p className=\"text-3xl font-medium\">{profileData?.full_name}</p>\n\n            <div className=\"flex my-4 gap-3\">\n              {isOwnProfile && (\n                <button\n                  onClick={showEditAccount}\n                  className=\"flex justify-center items-center h-9 w-28 text-primary-4 font-medium text-sm topup-btn-gradient rounded-2xl bg-primary-11\"\n                >\n                  <p className=\"text-sm\">Edit Account</p>\n                </button>\n              )}\n\n              <button\n                onClick={() => setOpenShare(true)}\n                className=\"flex justify-center items-center h-9 w-12 text-primary-4 font-medium text-sm topup-btn-gradient rounded-2xl bg-primary-11\"\n              >\n                <ShareModernIcon width={16} height={16} color=\"#DADADA\" />\n              </button>\n            </div>\n          </div>\n\n          <div className=\"flex gap-x-4 my-4\">\n            <ProfileInfo\n              value={followeeCount?.toString() || \"0\"}\n              title={followeeCount === 1 ? \"Follower\" : \"Followers\"} // Adjusts title dynamically\n            />\n            <ProfileInfo\n              value={followerCount?.toString() || \"0\"}\n              title={followerCount === 1 ? \"Following\" : \"Following\"} // Stays the same\n              leftBorder={true}\n            />\n            <ProfileInfo\n              value={likeCount?.toString() || \"0\"}\n              title={likeCount === 1 ? \"Like\" : \"Likes\"} // Adjusts title dynamically\n              leftBorder={true}\n            />\n          </div>\n\n          <p className=\"text-primary-7 my-4\"> Bio </p>\n          <p className=\"text-primary-7 my-4\"> {profileData?.bio} </p>\n        </div>\n\n        <Topup open={topup} setOpen={setTopup} refetch={refetch} />\n\n        <div className=\"hidden md:block\">\n          {isOwnProfile && (\n            <button\n              onClick={() => setTopup(true)}\n              className=\"flex gap-2 whitespace-nowrap text-primary-4 font-medium text-sm topup-btn-gradient p-3 rounded-md bg-primary-11\"\n            >\n              <div>\n                <FlashIcon width={16} height={16} color=\"#DADADA\" />\n              </div>\n              <p>\n                {(() => {\n                  const profileBalance = profileData?.creditBalance ?? 0;\n                  const dartConvertedBalance = dartBalance\n                    ? Number(formatEther(dartBalance)) / 3 // divide by 3 cos 1 credit == 3 darts\n                    : 0;\n                  const totalBalance = profileBalance + dartConvertedBalance;\n                  return `${totalBalance.toFixed(2)} Credit${\n                    totalBalance !== 1 ? \"s\" : \"\"\n                  }`;\n                })()}\n              </p>\n            </button>\n          )}\n        </div>\n      </div>\n      <ShareModal\n        open={openShare}\n        setOpen={setOpenShare}\n        link={\"https://unreal.art/home/profile/\" + profileId}\n        isProfile={true}\n      />\n      <ModalWrapper\n        title={title}\n        open={open}\n        setOpen={setOpen}\n        titleColor={title === \"Delete Account\" ? \"#FF5252\" : undefined}\n      >\n        {title === \"Edit Account\" && (\n          <EditModal\n            openProfile={() => setTitle(\"Edit Profile\")}\n            deleteProfile={() => setTitle(\"Delete Account\")}\n          />\n        )}\n        {title === \"Delete Account\" && (\n          <DeleteModal closeAction={handleClose} />\n        )}\n        {title === \"Edit Profile\" && profileData && (\n          <EditProfileModal profileId={profileId} closeAction={handleClose} />\n        )}\n      </ModalWrapper>\n    </>\n  );\n}\n","module.exports = require(\"node:fs\");","module.exports = require(\"worker_threads\");","module.exports = require(\"zlib\");","module.exports = require(\"perf_hooks\");","module.exports = require(\"node:worker_threads\");","module.exports = require(\"node:path\");","module.exports = require(\"node:net\");","module.exports = require(\"node:crypto\");","module.exports = require(\"buffer\");","module.exports = require(\"url\");","module.exports = require(\"child_process\");","module.exports = require(\"node:readline\");","module.exports = require(\"http\");","import { Client } from \"$/supabase/client\";\nimport { logError } from \"@/utils/sentryUtils\";\n\nexport const getLikeStat = async (\n  userId: string | undefined,\n  client: Client\n): Promise<number> => {\n  if (!userId) return 0;\n\n  try {\n    const { count, error } = await client\n      .from(\"likes\")\n      .select(\"*\", { count: \"exact\" })\n      .eq(\"post_author\", userId);\n\n    if (error) {\n      logError(\"Error fetching like count\", error);\n      return 0;\n    }\n\n    return count || 0;\n  } catch (err) {\n    logError(\"Unexpected error\", err);\n    return 0;\n  }\n};\n\n// export const getLikeStat = async (\n//   userId: string | undefined,\n//   client: Client\n// ): Promise<number> => {\n//   if (!userId) return 0;\n//   try {\n//     // Fetch posts with likes where author matches the specified value\n//     const { data: posts, error } = await client\n//       .from(\"likes\")\n//       .select(\"posts(*),created_at\")\n//       .eq(\"post_author\", userId); // Filter posts by the post_author\n\n//     if (error) {\n//       logError(\"Error fetching posts with likes\", error);\n//       return 0;\n//     }\n\n//     return posts.length || 0;\n//   } catch (err) {\n//     logError(\"Unexpected error\", err);\n//     return 0;\n//   }\n// };\n","import { useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { supabase } from \"$/supabase/client\";\nimport { getLikeStat } from \"@/queries/user/getLikeStat\";\nimport { dedupedRequest } from \"@/utils/queryOptimizer\";\nimport { useCallback } from \"react\";\n\n/**\n * Optimized hook for fetching a user's like statistics\n * Includes deduplication, optimized caching, and methods for updating counts\n */\nexport const useLikeStat = (userId?: string) => {\n  const queryClient = useQueryClient();\n\n  const result = useQuery<number>({\n    queryKey: [\"likeStat\", userId], // Unique cache key\n    queryFn: async () => {\n      if (!userId) return 0;\n\n      // Use request deduplication to prevent duplicate API calls\n      return dedupedRequest(`likeStat-${userId}`, () =>\n        getLikeStat(userId, supabase)\n      );\n    },\n    enabled: !!userId, // Only fetch if userId exists\n    staleTime: 1000 * 60 * 10, // Cache data for 10 minutes for better performance\n    gcTime: 1000 * 60 * 30, // Keep in cache for 30 minutes\n  });\n\n  // Optimistic update helpers\n  const incrementLikeStat = useCallback(() => {\n    if (!userId) return;\n\n    queryClient.setQueryData(\n      [\"likeStat\", userId],\n      (oldCount: number | undefined) => {\n        return (oldCount || 0) + 1;\n      }\n    );\n  }, [userId, queryClient]);\n\n  const decrementLikeStat = useCallback(() => {\n    if (!userId) return;\n\n    queryClient.setQueryData(\n      [\"likeStat\", userId],\n      (oldCount: number | undefined) => {\n        return Math.max(0, (oldCount || 0) - 1);\n      }\n    );\n  }, [userId, queryClient]);\n\n  // Refetch helper (for when you need fresh data)\n  const refreshLikeStat = useCallback(() => {\n    if (!userId) return;\n\n    queryClient.invalidateQueries({\n      queryKey: [\"likeStat\", userId],\n      exact: true,\n    });\n  }, [userId, queryClient]);\n\n  return {\n    ...result,\n    // Enhanced API with optimistic update methods\n    incrementLikeStat,\n    decrementLikeStat,\n    refreshLikeStat,\n    // Convenience properties\n    likeCount: result.data || 0,\n  };\n};\n","module.exports = require(\"tty\");","module.exports = require(\"async_hooks\");","module.exports = require(\"node:inspector\");","module.exports = require(\"net\");","interface ProfileInfoProps {\n    value: string;\n    title: string;\n    leftBorder?: boolean;\n}\n\nexport default function ProfileInfo ({ value, title, leftBorder } : ProfileInfoProps) {\n\n    return (\n        <div className={`flex flex-col md:flex-row md:items-center gap-2 border-primary-6 px-5 ${leftBorder && \"border-l-[1px]\"}`}>\n            <p className=\"text-xl text-primary-5\">{value}</p>\n            <p className=\"text-primary-6\">{title}</p>\n        </div>\n    )\n}","module.exports = require(\"events\");"],"names":["getFollowStats","userId","client","logWarning","followeeCount","followerCount","count","error","followerError","from","select","head","eq","logError","message","followeeError","useFollowStats","queryClient","useQueryClient","result","useQuery","queryKey","queryFn","dedupedRequest","supabase","enabled","staleTime","gcTime","useCallback","setQueryData","old","otherUserId","decrementFolloweeCount","Math","max","refreshStats","invalidateQueries","exact","incrementFolloweeCount","data","getUserById","single","id","wallet","bio","location","creditBalance","credit_balance","full_name","username","display_name","avatar_url","generateMetadata","params","paramsData","title","description","supabaseSSR","createClient","avatarUrl","profileUrl","openGraph","type","url","images","width","height","alt","twitter","card","Profile","searchParams","QueryClient","queryParams","prefetchInfiniteQuery","s","pageParam","getInitialPosts","nextCursor","length","undefined","initialPageParam","getNextPageParam","lastPage","pages","_jsx","HydrationBoundary","state","dehydrate","_jsxs","div","className","UserData","ProfileView","toUpperCase","getPostsByUser","getPrivatePostsByUser","getUserLikedPosts","getPinnedPostsByUser","getIsDraftPostsByUser","serverComponentModule.default","serverComponentModule.generateMetadata","useSearchParams","get","useParams","useUser","profileTab","initFromUrl","setProfileTab","useCreationAndProfileStore","isPending","startTransition","useTransition","currentIndex","setCurrentIndex","useState","handleTabChange","index","tabText","POST_GROUPS","toLowerCase","charAt","tabKey","slice","currentTabName","useMemo","isLoading","queryIsLoading","isError","hasNextPage","fetchNextPage","isFetchingNextPage","useInfiniteQuery","searchType","refetchOnMount","refetchOnWindowFocus","contentConfig","Public","content","subContent","Private","Liked","Pinned","Draft","renderContent","config","configs","PhotoGridTwo","Tabs","hideDraft","section","useUserData","profileId","currentUserId","finishSpan","startSpan","cachedUser","getEntity","userData","fetchSpan","normalizeEntity","retry","updateUserDataOptimistically","updateFields","Object","keys","updates","log","getQueryData","validDatabaseFields","enhancedUpdates","entries","forEach","key","value","includes","oldData","newData","isOwnProfile","ProfileSkeleton","Skeleton","circle","baseColor","highlightColor","EditModal","openProfile","deleteProfile","button","onClick","UserProfileIcon","color","p","DeleteIcon","loading","setLoading","useDeleteAccount","setError","router","useRouter","deleteAccount","userError","auth","getUser","user","errorMsg","sessionData","getSession","response","axiosInstanceLocal","delete","headers","token","session","access_token","status","signOut","push","success","err","errorMessage","DeleteModal","closeAction","confirmation","setConfirmation","handleDelete","e","preventDefault","toast","strong","form","label","input","placeholder","onChange","target","disabled","useUpdateUserDetails","throttleTimeoutRef","useRef","pendingUpdatesRef","mutation","useMutation","mutationFn","preserveFields","allowedFields","update","returnData","onMutate","Promise","all","cancelQueries","previousUser","previousProfile","previousUserData","existingEntity","clientCacheUpdate","onError","context","onSuccess","throttledUpdate","current","needToPreserveDisplayName","hasOwnProperty","setTimeout","currentProfileData","updateData","pendingUpdates","currentFirstName","firstname","split","currentLastName","lastname","join","trim","mutate","updateUserField","field","updateViewedProfile","throttledUpdateUser","EditProfileModal","authUser","profileData","setFirstName","splitName","firstName","setLastName","lastName","setFullName","setBio","displayName","setDisplayName","email","onSubmit","handleSave","Image","src","readOnly","dartContract","getContractInstance","torusTestnet","process","open","setOpen","topup","setTopup","openShare","setOpenShare","setTitle","profileLoading","profileError","authUserId","authUserLoading","likeCount","useLikeStat","dartBalance","refetch","useReadContract","contract","method","address","showEditAccount","handleClose","OptimizedImage","trackPerformance","imageName","ShareModernIcon","ProfileInfo","toString","leftBorder","Topup","FlashIcon","totalBalance","profileBalance","dartConvertedBalance","Number","formatEther","toFixed","ShareModal","link","isProfile","ModalWrapper","titleColor","getLikeStat","oldCount","decrementLikeStat","refreshLikeStat","incrementLikeStat"],"sourceRoot":""}