try{let e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:{},a=(new e.Error).stack;a&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[a]="be27ec84-cf33-4291-80ae-468f93d1359a",e._sentryDebugIdIdentifier="sentry-dbid-be27ec84-cf33-4291-80ae-468f93d1359a")}catch(e){}"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[82292],{82292:(e,a,s)=>{s.d(a,{onSessionProposal:()=>o});var i=s(50063),n=s(71271);async function o(e){let{wallet:a,walletConnectClient:s,event:o,chains:p,onConnect:d}=e,c=a.getAccount();if(!c)throw Error("No account connected to provided wallet");let f=o.verifyContext?.verified?.origin;f&&await t({origin:f,walletConnectClient:s});let l=await r({account:c,walletConnectClient:s,sessionProposal:o,chains:p});await (0,n.E1)(l),a.subscribe("disconnect",()=>{(0,i.EF)({session:l,walletConnectClient:s})}),d?.(l)}async function t({walletConnectClient:e,origin:a}){for(let s of(await (0,n.S5)()))s.origin===a&&await (0,i.EF)({session:s,walletConnectClient:e})}async function r({account:e,walletConnectClient:a,sessionProposal:s,chains:i}){if(!s.params.requiredNamespaces?.eip155&&!s.params.optionalNamespaces?.eip155)throw Error("No EIP155 namespace found in Wallet Connect session proposal");let n={chains:[...Array.from(new Set([...s.params.requiredNamespaces?.eip155?.chains?.map(a=>`${a}:${e.address}`)??[],...s.params.optionalNamespaces?.eip155?.chains?.map(a=>`${a}:${e.address}`)??[],...i?.map(a=>`eip155:${a.id}:${e.address}`)??[]]))],methods:[...s.params.requiredNamespaces?.eip155?.methods??[],...s.params.optionalNamespaces?.eip155?.methods??[]],events:[...s.params.requiredNamespaces?.eip155?.events??[],...s.params.optionalNamespaces?.eip155?.events??[]]},o=await a.approve({id:s.id,namespaces:{eip155:{accounts:n.chains,methods:n.methods,events:n.events}}});return{topic:(await o.acknowledged()).topic,origin:s.verifyContext?.verified?.origin||"Unknown origin"}}}}]);